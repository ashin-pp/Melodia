<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Order Details - Melodia Admin</title>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: #f5f5f5;
      color: #333;
    }

    .admin-container {
      min-height: 100vh;
      display: flex;
      flex-direction: column;
    }

    /* Header Styles */
    .header {
      background: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%);
      color: white;
      padding: 20px 20px;
    }

    .header-main {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .brand {
      font-size: 24px;
      font-weight: 600;
      letter-spacing: -0.5px;
    }

    .user-profile {
      display: flex;
      align-items: center;
      gap: 10px;
    }

    .username {
      font-size: 14px;
      font-weight: 500;
      text-transform: uppercase;
    }

    .user-profile i {
      font-size: 20px;
    }

    /* Main Content Layout */
    .main-content {
      display: flex;
      flex: 1;
    }

    /* Sidebar Styles */
    .sidebar {
      width: 200px;
      background-color: #f8f9fa;
      border-right: 1px solid #e9ecef;
      min-height: calc(100vh - 80px);
    }

    .sidebar nav ul {
      list-style: none;
      padding: 20px 0;
    }

    .sidebar nav li {
      margin: 5px 0;
    }

    .sidebar nav a {
      display: flex;
      align-items: center;
      padding: 12px 20px;
      text-decoration: none;
      color: #6c757d;
      font-size: 14px;
      transition: all 0.3s ease;
    }

    .sidebar nav a:hover,
    .sidebar nav li.active a {
      background-color: #000;
      color: white;
    }

    .sidebar nav a i {
      margin-right: 10px;
      width: 16px;
    }

    /* Order Details Content */
    .order-content {
      flex: 1;
      padding: 30px;
      background-color: #fff;
    }

    .page-header {
      margin-bottom: 30px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .page-header h2 {
      font-size: 28px;
      font-weight: 700;
      color: #2c3e50;
      margin-bottom: 8px;
    }

    .back-btn {
      background: #6c757d;
      color: white;
      padding: 10px 20px;
      border-radius: 8px;
      font-size: 14px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      gap: 8px;
      border: none;
      text-decoration: none;
    }

    .back-btn:hover {
      background: #5a6268;
      transform: translateY(-1px);
    }

    .order-details-card {
      background: white;
      border-radius: 12px;
      padding: 30px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
      border: 1px solid #f0f0f0;
      margin-bottom: 20px;
    }

    .order-header {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 20px;
      margin-bottom: 30px;
      padding-bottom: 20px;
      border-bottom: 1px solid #e9ecef;
    }

    .order-info {
      display: flex;
      flex-direction: column;
    }

    .order-label {
      font-size: 12px;
      font-weight: 600;
      color: #6c757d;
      text-transform: uppercase;
      margin-bottom: 5px;
    }

    .order-value {
      font-size: 16px;
      font-weight: 600;
      color: #2c3e50;
    }

    .status-badge {
      padding: 6px 12px;
      border-radius: 12px;
      font-size: 12px;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.5px;
      display: inline-block;
    }

    .status-pending { background: #fff3cd; color: #856404; }
    .status-confirmed { background: #cce7ff; color: #004085; }
    .status-processing { background: #e2e3ff; color: #383d41; }
    .status-shipped { background: #d4edda; color: #155724; }
    .status-delivered { background: #d4edda; color: #155724; }
    .status-cancelled { background: #f8d7da; color: #721c24; }
    .status-returned { background: #fef3c7; color: #92400e; }

    /* Cancelled Items Styling */
    .cancelled-section {
      margin-top: 30px;
      border-top: 2px solid #fee2e2;
      padding-top: 20px;
    }

    .cancelled-item-row {
      background-color: #fff5f5 !important;
      border-left: 4px solid #dc3545;
    }

    .cancelled-item-row:hover {
      background-color: #fef2f2 !important;
    }

    .customer-section {
      margin-bottom: 30px;
    }

    .section-title {
      font-size: 18px;
      font-weight: 600;
      color: #2c3e50;
      margin-bottom: 15px;
      display: flex;
      align-items: center;
      gap: 8px;
    }

    .customer-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 20px;
    }

    .customer-card {
      background: #f8f9fa;
      padding: 20px;
      border-radius: 8px;
      border: 1px solid #e9ecef;
    }

    .items-section {
      margin-top: 30px;
    }

    .items-table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 15px;
    }

    .items-table th,
    .items-table td {
      padding: 12px 15px;
      text-align: left;
      border-bottom: 1px solid #e9ecef;
    }

    .items-table th {
      background: #f8f9fa;
      font-weight: 600;
      color: #2c3e50;
      font-size: 12px;
      text-transform: uppercase;
    }

    /* Product Display Styles */
    .product-info {
      display: flex;
      align-items: center;
      gap: 12px;
      min-width: 250px;
    }

    .product-image {
      width: 60px;
      height: 60px;
      border-radius: 8px;
      overflow: hidden;
      background: #f8f9fa;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-shrink: 0;
      border: 1px solid #e9ecef;
    }

    .product-image img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }

    .no-image {
      color: #6c757d;
      font-size: 24px;
    }

    .product-details {
      flex: 1;
      min-width: 0;
    }

    .product-name {
      font-weight: 600;
      color: #2c3e50;
      font-size: 14px;
      margin-bottom: 4px;
      line-height: 1.3;
    }

    .product-brand {
      font-size: 12px;
      color: #6c757d;
      margin-bottom: 2px;
    }

    .product-variant {
      font-size: 12px;
      color: #6c757d;
      margin-bottom: 2px;
    }

    .product-size {
      font-size: 12px;
      color: #6c757d;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      .product-info {
        flex-direction: column;
        align-items: flex-start;
        gap: 8px;
      }

      .product-image {
        width: 50px;
        height: 50px;
      }

      .items-table {
        font-size: 12px;
      }

      .items-table th,
      .items-table td {
        padding: 8px 6px;
      }
    }

    .order-summary {
      background: #f8f9fa;
      padding: 20px;
      border-radius: 8px;
      margin-top: 20px;
    }

    .summary-row {
      display: flex;
      justify-content: space-between;
      margin-bottom: 10px;
    }

    .summary-total {
      font-weight: 700;
      font-size: 18px;
      color: #2c3e50;
      border-top: 1px solid #dee2e6;
      padding-top: 10px;
      margin-top: 10px;
    }



    .btn-change-item-status {
      background: #28a745;
      color: white;
      border: none;
      padding: 4px 8px;
      border-radius: 4px;
      font-size: 12px;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .btn-change-item-status:hover {
      background: #218838;
    }

    /* Status Modal */
    .modal {
      display: none;
      position: fixed;
      z-index: 1000;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0,0,0,0.5);
    }

    .modal-content {
      background-color: white;
      margin: 15% auto;
      padding: 30px;
      border-radius: 12px;
      width: 90%;
      max-width: 500px;
      box-shadow: 0 4px 20px rgba(0,0,0,0.3);
    }

    .modal-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
      padding-bottom: 15px;
      border-bottom: 1px solid #e9ecef;
    }

    .modal-title {
      font-size: 20px;
      font-weight: 600;
      color: #2c3e50;
    }

    .close {
      color: #aaa;
      font-size: 28px;
      font-weight: bold;
      cursor: pointer;
      border: none;
      background: none;
    }

    .close:hover {
      color: #000;
    }

    .form-group {
      margin-bottom: 20px;
    }

    .form-group label {
      display: block;
      margin-bottom: 8px;
      font-weight: 600;
      color: #2c3e50;
    }

    .form-control {
      width: 100%;
      padding: 10px 12px;
      border: 1px solid #e9ecef;
      border-radius: 6px;
      font-size: 14px;
      transition: border-color 0.3s ease;
    }

    .form-control:focus {
      outline: none;
      border-color: #007bff;
      box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);
    }

    .modal-actions {
      display: flex;
      gap: 10px;
      justify-content: flex-end;
      margin-top: 20px;
    }

    .btn {
      padding: 10px 20px;
      border: none;
      border-radius: 6px;
      font-size: 14px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .btn-primary {
      background: #007bff;
      color: white;
    }

    .btn-primary:hover {
      background: #0056b3;
    }

    .btn-secondary {
      background: #6c757d;
      color: white;
    }

    .btn-secondary:hover {
      background: #5a6268;
    }

    @media (max-width: 768px) {
      .main-content {
        flex-direction: column;
      }
      
      .sidebar {
        width: 100%;
        min-height: auto;
      }
      
      .sidebar nav ul {
        display: flex;
        overflow-x: auto;
        padding: 10px;
      }
      
      .sidebar nav li {
        margin: 0 5px;
        white-space: nowrap;
      }
      
      .order-content {
        padding: 15px;
      }
      
      .order-header {
        grid-template-columns: 1fr;
      }
      
      .customer-grid {
        grid-template-columns: 1fr;
      }
    }
  </style>
</head>
<body>
  <div class="admin-container">
    <!-- Header -->
    <div class="header">
      <div class="header-main">
        <h1 class="brand">Melodia</h1>
        <div class="user-profile">
          <span class="username">ADMIN</span>
          <i class="fas fa-user-circle"></i>
        </div>
      </div>
    </div>

    <div class="main-content">
      <!-- Sidebar -->
      <div class="sidebar">
        <nav>
          <ul>
            <li><a href="/admin/dashboard"><i class="fas fa-tachometer-alt"></i> Dashboard</a></li>
            <li><a href="/admin/products"><i class="fas fa-box"></i> Products</a></li>
            <li class="active"><a href="/admin/orders"><i class="fas fa-list"></i> Order Management</a></li>
            <li><a href="/admin/customer"><i class="fas fa-users"></i> Users</a></li>
            <li><a href="/admin/sales-report"><i class="fas fa-chart-bar"></i> Sales Report</a></li>
            <li><a href="/admin/coupons"><i class="fas fa-tags"></i> Coupons</a></li>
            <li><a href="/admin/category"><i class="fas fa-folder"></i> Category</a></li>
            <li><a href="/admin/banners"><i class="fas fa-flag"></i> Banners</a></li>
            <li><a href="/admin/settings"><i class="fas fa-cog"></i> Settings</a></li>
            <li><a href="#" id="logoutBtn"><i class="fas fa-sign-out-alt"></i> Logout</a></li>
          </ul>
        </nav>
      </div>

      <!-- Order Details Content -->
      <div class="order-content">
        <!-- Page Header -->
        <div class="page-header">
          <div>
            <h2>Order Details</h2>
            <p style="color: #6c757d; font-size: 14px;">View complete order information</p>
          </div>
          <div style="display: flex; gap: 10px;">
            <button onclick="downloadInvoice()" class="btn btn-primary" style="background: #28a745; color: white; padding: 10px 20px; border-radius: 8px; font-size: 14px; font-weight: 600; cursor: pointer; transition: all 0.3s ease; display: flex; align-items: center; gap: 8px; border: none; text-decoration: none; margin-right: 10px;" onmouseover="this.style.background='#218838'; this.style.transform='translateY(-1px)'" onmouseout="this.style.background='#28a745'; this.style.transform='translateY(0)'">
              <i class="fas fa-download"></i>
              Download Invoice
            </button>

            <a href="/admin/orders" class="back-btn">
              <i class="fas fa-arrow-left"></i>
              Back to Orders
            </a>
          </div>
        </div>

        <!-- Order Details Card -->
        <div class="order-details-card">
          <!-- Order Header Info -->
          <div class="order-header">
            <div class="order-info">
              <div class="order-label">Order ID</div>
              <div class="order-value">#<%= order.orderId || 'N/A' %></div>
            </div>
            <div class="order-info">
              <div class="order-label">Order Date</div>
              <div class="order-value">
                <%= order.orderDate ? new Date(order.orderDate).toLocaleDateString() : 'N/A' %>
              </div>
            </div>

            <div class="order-info">
              <div class="order-label">Total Amount</div>
              <div class="order-value">₹<%= order.totalAmount ? order.totalAmount.toLocaleString() : '0' %></div>
            </div>
          </div>

          <!-- Customer Information -->
          <div class="customer-section">
            <h3 class="section-title">
              <i class="fas fa-user"></i>
              Customer Information
            </h3>
            <div class="customer-grid">
              <div class="customer-card">
                <h4 style="margin-bottom: 10px; color: #2c3e50;">Customer Details</h4>
                <p><strong>Name:</strong> <%= order.userId?.fullName || order.shippingAddress?.fullName || 'N/A' %></p>
                <p><strong>Email:</strong> <%= order.userId?.email || 'N/A' %></p>
                <p><strong>Phone:</strong> <%= order.userId?.phoneNumber || order.shippingAddress?.phoneNumber || 'N/A' %></p>
              </div>
              <div class="customer-card">
                <h4 style="margin-bottom: 10px; color: #2c3e50;">Shipping Address</h4>
                <% if (order.shippingAddress) { %>
                  <p><strong>Name:</strong> <%= order.shippingAddress.fullName %></p>
                  <p><strong>Address:</strong> <%= order.shippingAddress.address %></p>
                  <p><strong>City:</strong> <%= order.shippingAddress.city %></p>
                  <p><strong>State:</strong> <%= order.shippingAddress.state %></p>
                  <p><strong>Pincode:</strong> <%= order.shippingAddress.pincode %></p>
                  <p><strong>Phone:</strong> <%= order.shippingAddress.phoneNumber %></p>
                <% } else { %>
                  <p>No shipping address available</p>
                <% } %>
              </div>
            </div>
          </div>

          <!-- Order Items -->
          <div class="items-section">
            <h3 class="section-title">
              <i class="fas fa-shopping-bag"></i>
              Order Items
            </h3>
            
            <% if (order.items && order.items.length > 0) { %>
              <table class="items-table">
                <thead>
                  <tr>
                    <th style="width: 300px;">Product Details</th>
                    <th>Qty</th>
                    <th>Price</th>
                    <th>Status</th>
                    <th>Total</th>
                    <th>Actions</th>
                  </tr>
                </thead>
                <tbody>
                  <% order.items.forEach((item, index) => { %>
                    <% 
                      // Check if item is cancelled (either in cancelledItems array or has Cancelled status)
                      const isCancelled = (order.cancelledItems && order.cancelledItems.some(cancelled => 
                        cancelled.variantId.toString() === item.variantId._id.toString()
                      )) || item.status === 'Cancelled';
                      
                      // Only show items that are not cancelled and not returned
                      const isReturned = item.status === 'Returned';
                      
                      if (!isCancelled && !isReturned) { 
                    %>
                    <tr>
                      <td>
                        <div class="product-info">
                          <div class="product-image">
                            <% if (item.variantId && item.variantId.images && item.variantId.images.length > 0) { %>
                              <img src="<%= item.variantId.images[0].url || item.variantId.images[0] %>" alt="<%= item.productName || 'Product' %>">
                            <% } else { %>
                              <div class="no-image">
                                <i class="fas fa-image"></i>
                              </div>
                            <% } %>
                          </div>
                          <div class="product-details">
                            <div class="product-name">
                              <%= item.variantId && item.variantId.productId ? item.variantId.productId.productName : (item.productName || 'Product') %>
                            </div>
                            <div class="product-brand">
                              <% if (item.variantId && item.variantId.productId && item.variantId.productId.brand) { %>
                                Brand: <%= item.variantId.productId.brand %>
                              <% } %>
                            </div>
                            <div class="product-variant">
                              <% if (item.variantId && item.variantId.color) { %>
                                Color: <%= item.variantId.color %>
                              <% } else if (item.color) { %>
                                Color: <%= item.color %>
                              <% } %>
                            </div>
                            <% if (item.size) { %>
                              <div class="product-size">Size: <%= item.size %></div>
                            <% } %>
                          </div>
                        </div>
                      </td>
                      <td><%= item.quantity %></td>
                      <td>₹<%= (item.price || 0).toLocaleString() %></td>
                      <td>
                        <span class="status-badge status-<%= (item.status || 'pending').toLowerCase() %>" id="item-status-<%= index %>">
                          <%= item.status || 'Pending' %>
                        </span>
                      </td>
                      <td>₹<%= ((item.quantity || 0) * (item.price || 0)).toLocaleString() %></td>
                      <td>
                        <button onclick="showItemStatusModal('<%= item._id || index %>', '<%= item.status %>', '<%= item.productName %>')" 
                                class="btn-change-item-status">
                          <i class="fas fa-edit"></i>
                        </button>
                      </td>
                    </tr>
                    <% } %>
                  <% }); %>
                </tbody>
              </table>
            <% } else { %>
              <p>No items found in this order.</p>
            <% } %>

            <!-- Cancelled Items Section -->
            <% if (order.cancelledItems && order.cancelledItems.length > 0) { %>
              <h4 class="section-title" style="margin-top: 30px; color: #dc3545;">
                <i class="fas fa-times-circle"></i>
                Cancelled Items
              </h4>
              
              <table class="items-table">
                <thead>
                  <tr>
                    <th style="width: 300px;">Product Details</th>
                    <th>Qty</th>
                    <th>Reason</th>
                    <th>Cancelled Date</th>
                    <th>Status</th>
                  </tr>
                </thead>
                <tbody>
                  <% order.cancelledItems.forEach((cancelledItem, index) => { %>
                    <tr class="cancelled-item-row">
                      <td>
                        <div class="product-info">
                          <div class="product-image">
                            <% if (cancelledItem.variantId && cancelledItem.variantId.images && cancelledItem.variantId.images.length > 0) { %>
                              <img src="<%= cancelledItem.variantId.images[0].url || cancelledItem.variantId.images[0] %>" alt="Cancelled Product" style="opacity: 0.5;">
                            <% } else { %>
                              <div class="no-image" style="background: #fee2e2;">
                                <i class="fas fa-times" style="color: #dc3545;"></i>
                              </div>
                            <% } %>
                          </div>
                          <div class="product-details">
                            <div class="product-name" style="color: #dc3545;">
                              <% if (cancelledItem.variantId && cancelledItem.variantId.productId) { %>
                                <%= cancelledItem.variantId.productId.productName %> (CANCELLED)
                              <% } else { %>
                                Cancelled Product
                              <% } %>
                            </div>
                            <div class="product-brand">
                              <% if (cancelledItem.variantId && cancelledItem.variantId.productId && cancelledItem.variantId.productId.brand) { %>
                                Brand: <%= cancelledItem.variantId.productId.brand %>
                              <% } %>
                            </div>
                            <div class="product-variant">
                              <% if (cancelledItem.variantId && cancelledItem.variantId.color) { %>
                                Color: <%= cancelledItem.variantId.color %>
                              <% } %>
                            </div>
                          </div>
                        </div>
                      </td>
                      <td><%= cancelledItem.quantity || 0 %></td>
                      <td><%= cancelledItem.reason || 'No reason provided' %></td>
                      <td>
                        <%= cancelledItem.cancelledAt ? new Date(cancelledItem.cancelledAt).toLocaleDateString('en-IN', { 
                          year: 'numeric', 
                          month: 'short', 
                          day: 'numeric',
                          hour: '2-digit',
                          minute: '2-digit'
                        }) : 'N/A' %>
                      </td>
                      <td>
                        <span class="status-badge status-cancelled">
                          Cancelled
                        </span>
                      </td>
                    </tr>
                  <% }); %>
                </tbody>
              </table>
            <% } %>

            <!-- Returned Items Section -->
            <% 
              const returnedItems = order.items.filter(item => item.status === 'Returned');
            %>
            
            <% if (returnedItems.length > 0) { %>
              <h4 class="section-title" style="margin-top: 30px; color: #f59e0b;">
                <i class="fas fa-undo"></i>
                Returned Items
              </h4>
              
              <table class="items-table">
                <thead>
                  <tr>
                    <th style="width: 300px;">Product Details</th>
                    <th>Qty</th>
                    <th>Reason</th>
                    <th>Returned Date</th>
                    <th>Status</th>
                  </tr>
                </thead>
                <tbody>
                  <% returnedItems.forEach((returnedItem, index) => { %>
                    <tr style="background-color: #fffbeb !important; border-left: 4px solid #f59e0b;">
                      <td>
                        <div class="product-info">
                          <div class="product-image">
                            <% if (returnedItem.variantId && returnedItem.variantId.images && returnedItem.variantId.images.length > 0) { %>
                              <img src="<%= returnedItem.variantId.images[0].url || returnedItem.variantId.images[0] %>" alt="Returned Product" style="opacity: 0.7;">
                            <% } else { %>
                              <div class="no-image" style="background: #fef3c7;">
                                <i class="fas fa-undo" style="color: #f59e0b;"></i>
                              </div>
                            <% } %>
                          </div>
                          <div class="product-details">
                            <div class="product-name" style="color: #f59e0b;">
                              <% if (returnedItem.variantId && returnedItem.variantId.productId) { %>
                                <%= returnedItem.variantId.productId.productName %> (RETURNED)
                              <% } else { %>
                                Returned Product
                              <% } %>
                            </div>
                            <div class="product-brand">
                              <% if (returnedItem.variantId && returnedItem.variantId.productId && returnedItem.variantId.productId.brand) { %>
                                Brand: <%= returnedItem.variantId.productId.brand %>
                              <% } %>
                            </div>
                            <div class="product-variant">
                              <% if (returnedItem.variantId && returnedItem.variantId.color) { %>
                                Color: <%= returnedItem.variantId.color %>
                              <% } %>
                            </div>
                          </div>
                        </div>
                      </td>
                      <td><%= returnedItem.quantity || 0 %></td>
                      <td><%= returnedItem.returnReason || 'No reason provided' %></td>
                      <td>
                        <%= returnedItem.returnedAt ? new Date(returnedItem.returnedAt).toLocaleDateString('en-IN', { 
                          year: 'numeric', 
                          month: 'short', 
                          day: 'numeric',
                          hour: '2-digit',
                          minute: '2-digit'
                        }) : 'N/A' %>
                      </td>
                      <td>
                        <span class="status-badge status-returned" style="background: #fef3c7; color: #f59e0b;">
                          Returned
                        </span>
                      </td>
                    </tr>
                  <% }); %>
                </tbody>
              </table>
            <% } %>





            <!-- Order Summary -->
            <div class="order-summary">
              <div class="summary-row">
                <span>Subtotal:</span>
                <span>₹<%= order.totalAmount ? (order.totalAmount - (order.deliveryCharge || 0)).toLocaleString() : '0' %></span>
              </div>
              <div class="summary-row">
                <span>Delivery Charge:</span>
                <span>₹<%= order.deliveryCharge ? order.deliveryCharge.toLocaleString() : '0' %></span>
              </div>
              <div class="summary-row summary-total">
                <span>Total Amount:</span>
                <span>₹<%= order.totalAmount ? order.totalAmount.toLocaleString() : '0' %></span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>



  <!-- Item Status Change Modal -->
  <div id="itemStatusModal" class="modal">
    <div class="modal-content">
      <div class="modal-header">
        <h3 class="modal-title">Change Item Status</h3>
        <button class="close" onclick="closeItemStatusModal()">&times;</button>
      </div>
      <form id="itemStatusForm">
        <div class="form-group">
          <label for="itemName">Product</label>
          <input type="text" id="itemName" class="form-control" readonly>
        </div>
        <div class="form-group">
          <label for="newItemStatus">New Status</label>
          <select id="newItemStatus" class="form-control" required>
            <option value="">Select Status</option>
            <option value="Pending">Pending</option>
            <option value="Confirmed">Confirmed</option>
            <option value="Processing">Processing</option>
            <option value="Shipped">Shipped</option>
            <option value="Out for Delivery">Out for Delivery</option>
            <option value="Delivered">Delivered</option>
            <option value="Cancelled">Cancelled</option>
            <option value="Returned">Returned</option>
          </select>
        </div>
        <div class="form-group">
          <label for="itemStatusReason">Reason (Optional)</label>
          <textarea id="itemStatusReason" class="form-control" rows="3" 
            placeholder="Enter reason for item status change..."></textarea>
        </div>
        <div class="modal-actions">
          <button type="button" class="btn btn-secondary" onclick="closeItemStatusModal()">Cancel</button>
          <button type="submit" class="btn btn-primary">Update Item Status</button>
        </div>
      </form>
    </div>
  </div>

  <script>
    const orderId = '<%= order._id %>';
    let currentItemId = null;
    let currentItemStatus = null;



    // Item Status Functions
    function showItemStatusModal(itemId, itemStatus, itemName) {
      currentItemId = itemId;
      currentItemStatus = itemStatus;
      
      document.getElementById('itemStatusModal').style.display = 'block';
      document.getElementById('itemName').value = itemName;
      document.getElementById('newItemStatus').value = itemStatus;
    }

    function closeItemStatusModal() {
      document.getElementById('itemStatusModal').style.display = 'none';
      document.getElementById('itemStatusForm').reset();
      currentItemId = null;
      currentItemStatus = null;
    }

    // Close modals when clicking outside
    window.onclick = function(event) {
      const itemStatusModal = document.getElementById('itemStatusModal');
      
      if (event.target == itemStatusModal) {
        closeItemStatusModal();
      }
    }



    // Handle item status form submission
    document.getElementById('itemStatusForm').addEventListener('submit', async function(e) {
      e.preventDefault();
      
      const newStatus = document.getElementById('newItemStatus').value;
      const reason = document.getElementById('itemStatusReason').value;
      const itemName = document.getElementById('itemName').value;
      
      if (!newStatus) {
        Swal.fire('Error', 'Please select a status', 'error');
        return;
      }

      if (newStatus === currentItemStatus) {
        Swal.fire('Info', 'Item status is already set to ' + newStatus, 'info');
        return;
      }

      // Show confirmation
      const result = await Swal.fire({
        title: 'Confirm Item Status Change',
        text: `Change "${itemName}" status from "${currentItemStatus}" to "${newStatus}"?`,
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#28a745',
        cancelButtonColor: '#6c757d',
        confirmButtonText: 'Yes, Update Item Status',
        cancelButtonText: 'Cancel'
      });

      if (result.isConfirmed) {
        updateItemStatus(currentItemId, newStatus, reason);
      }
    });



    async function updateItemStatus(itemId, status, reason) {
      try {
        // Show loading
        Swal.fire({
          title: 'Updating Item Status...',
          allowOutsideClick: false,
          didOpen: () => {
            Swal.showLoading();
          }
        });

        const response = await fetch(`/admin/api/orders/items/${itemId}/status`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ status, reason })
        });

        const result = await response.json();

        if (result.success) {
          Swal.fire({
            title: 'Success!',
            text: result.message,
            icon: 'success',
            confirmButtonColor: '#28a745'
          }).then(() => {
            // Reload page to show updated status
            window.location.reload();
          });
        } else {
          Swal.fire('Error', result.error || 'Failed to update item status', 'error');
        }
      } catch (error) {
        console.error('Update item status error:', error);
        Swal.fire('Error', 'Failed to update item status', 'error');
      } finally {
        closeItemStatusModal();
      }
    }

    // Professional invoice download function
    async function downloadInvoice() {
      try {
        // Show loading indicator
        Swal.fire({
          title: 'Generating Invoice...',
          text: 'Please wait while we prepare your PDF',
          allowOutsideClick: false,
          showConfirmButton: false,
          didOpen: () => {
            Swal.showLoading();
          }
        });

        const downloadUrl = `/admin/orders/<%= order._id %>/invoice`;
        
        // Primary method: Fetch and download
        const response = await fetch(downloadUrl, {
          method: 'GET',
          headers: {
            'Accept': 'application/pdf'
          }
        });
        
        if (!response.ok) {
          throw new Error(`Server error: ${response.status}`);
        }
        
        // Verify content type
        const contentType = response.headers.get('content-type');
        if (!contentType || !contentType.includes('application/pdf')) {
          throw new Error('Invalid response format');
        }
        
        // Get PDF blob and create download
        const blob = await response.blob();
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = `Invoice-<%= order.orderId %>.pdf`;
        a.style.display = 'none';
        document.body.appendChild(a);
        a.click();
        
        // Cleanup
        setTimeout(() => {
          window.URL.revokeObjectURL(url);
          document.body.removeChild(a);
        }, 100);
        
        // Show success message
        Swal.fire({
          title: 'Success!',
          text: 'Invoice downloaded successfully',
          icon: 'success',
          timer: 2000,
          showConfirmButton: false
        });
        
      } catch (error) {
        console.error('Invoice download failed:', error);
        
        // Fallback method: Direct link
        try {
          Swal.close();
          
          // Try iframe fallback
          const iframe = document.createElement('iframe');
          iframe.style.display = 'none';
          iframe.src = `/admin/orders/<%= order._id %>/invoice`;
          document.body.appendChild(iframe);
          
          // Show fallback success message
          setTimeout(() => {
            document.body.removeChild(iframe);
            Swal.fire({
              title: 'Download Started',
              text: 'Invoice download initiated',
              icon: 'info',
              timer: 2000,
              showConfirmButton: false
            });
          }, 2000);
          
        } catch (fallbackError) {
          Swal.fire({
            title: 'Download Failed',
            text: 'Unable to download invoice. Please try again later.',
            icon: 'error',
            confirmButtonColor: '#dc3545'
          });
        }
      }
    }

    // Logout confirmation modal
    function showLogoutModal() {
      if (typeof Swal !== 'undefined') {
        Swal.fire({
          title: 'Logout Confirmation',
          text: 'Are you sure you want to logout from admin panel?',
          icon: 'question',
          showCancelButton: true,
          confirmButtonColor: '#dc3545',
          cancelButtonColor: '#6c757d',
          confirmButtonText: 'Yes, Logout',
          cancelButtonText: 'Cancel',
          reverseButtons: true,
          focusConfirm: false,
          focusCancel: true,
          allowOutsideClick: false
        }).then((result) => {
          if (result.isConfirmed) {
            // Show loading and redirect
            Swal.fire({
              title: 'Logging out...',
              text: 'Please wait',
              allowOutsideClick: false,
              allowEscapeKey: false,
              showConfirmButton: false,
              timer: 800,
              didOpen: () => {
                Swal.showLoading();
              }
            }).then(() => {
              window.location.href = '/admin/logout';
            });
          }
        });
      } else {
        // Fallback for browsers without SweetAlert2
        if (confirm('Are you sure you want to logout from admin panel?')) {
          window.location.href = '/admin/logout';
        }
      }
    }



    // Initialize page functionality
    document.addEventListener('DOMContentLoaded', function() {
      // Bind logout button event
      const logoutBtn = document.getElementById('logoutBtn');
      if (logoutBtn) {
        logoutBtn.addEventListener('click', function(e) {
          e.preventDefault();
          showLogoutModal();
        });
      }
    });
  </script>
</body>
</html>