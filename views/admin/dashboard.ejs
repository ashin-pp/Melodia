<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Melodia - Admin Panel</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f5f5f5;
            color: #333;
        }

        .admin-container {
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        /* Header Styles */
        .header {
            background: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%);
            color: white;
            padding: 20px 20px;
            /* border-bottom: 3px solid #007bff; */
        }

        .breadcrumb {
            font-size: 12px;
            opacity: 0.7;
            margin-bottom: 8px;
        }

        .header-main {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .brand {
            font-size: 24px;
            font-weight: 600;
            letter-spacing: -0.5px;
        }

        .user-profile {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .username {
            font-size: 14px;
            font-weight: 500;
            text-transform: uppercase;
        }

        .user-profile i {
            font-size: 20px;
        }

        /* Main Content Layout */
        .main-content {
            display: flex;
            flex: 1;
        }

        /* Sidebar Styles */
        .sidebar {
            width: 200px;
            background-color: #f8f9fa;
            border-right: 1px solid #e9ecef;
            min-height: calc(100vh - 80px);
        }

        .sidebar nav ul {
            list-style: none;
            padding: 20px 0;
        }

        .sidebar nav li {
            margin: 5px 0;
        }

        .sidebar nav a {
            display: flex;
            align-items: center;
            padding: 12px 20px;
            text-decoration: none;
            color: #6c757d;
            font-size: 14px;
            transition: all 0.3s ease;
        }

        .sidebar nav a:hover,
        .sidebar nav li.active a {
            background-color: #000;
            color: white;
        }

        .sidebar nav a i {
            margin-right: 10px;
            width: 16px;
        }

        /* Dashboard Content */
        .dashboard-content {
            flex: 1;
            padding: 30px;
            background-color: #fff;
        }

        /* Period Filter */
        .period-filter {
            display: flex;
            gap: 20px;
            align-items: end;
            margin-bottom: 30px;
            padding: 20px;
            background: white;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .filter-group {
            display: flex;
            flex-direction: column;
            gap: 5px;
        }

        .filter-group label {
            font-size: 14px;
            font-weight: 500;
            color: #666;
        }

        .btn-apply {
            background: #007bff;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 6px;
            cursor: pointer;
            font-weight: 500;
        }

        .btn-apply:hover {
            background: #0056b3;
        }

        /* Stats Grid */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: white;
            border-radius: 12px;
            padding: 25px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            text-align: left;
        }

        .stat-card.total-sales {
            background: linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%);
            color: white;
        }

        .stat-card.visitors {
            background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
            color: #333;
        }

        .stat-card.total-orders {
            background: linear-gradient(135deg, #a8c8ec 0%, #d1c4e9 100%);
            color: white;
        }

        .stat-card.users {
            background: linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%);
            color: #333;
        }

        .stat-content {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .stat-label {
            font-size: 14px;
            opacity: 0.9;
            font-weight: 500;
        }

        .stat-number {
            font-size: 28px;
            font-weight: bold;
        }

        /* Charts Container */
        .charts-container {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            margin-bottom: 30px;
        }

        .chart-section {
            background: white;
            border-radius: 12px;
            padding: 25px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .chart-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .chart-header h3 {
            font-size: 18px;
            font-weight: 600;
            color: #2c3e50;
            margin: 0;
        }

        .chart-legend {
            display: flex;
            gap: 15px;
        }

        .legend-item {
            display: flex;
            align-items: center;
            gap: 8px;
            font-size: 12px;
            color: #666;
        }

        .legend-color {
            width: 12px;
            height: 12px;
            border-radius: 2px;
        }

        .sales-color {
            background: #007bff;
        }

        .orders-color {
            background: #28a745;
        }

        .chart-container {
            position: relative;
            height: 250px;
        }

        /* Ledger Section */
        .ledger-section {
            background: white;
            border-radius: 12px;
            padding: 25px;
            margin-bottom: 30px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .ledger-header h3 {
            font-size: 18px;
            font-weight: 600;
            color: #2c3e50;
            margin: 0 0 20px 0;
        }

        .ledger-form {
            display: flex;
            align-items: end;
            gap: 20px;
            flex-wrap: wrap;
        }

        .date-inputs {
            display: flex;
            gap: 20px;
        }

        .date-group {
            display: flex;
            flex-direction: column;
            gap: 5px;
        }

        .date-group label {
            font-size: 14px;
            font-weight: 500;
            color: #666;
        }

        .date-input {
            padding: 10px 12px;
            border: 1px solid #ddd;
            border-radius: 6px;
            font-size: 14px;
            min-width: 150px;
        }

        .ledger-buttons {
            display: flex;
            gap: 12px;
            flex-wrap: wrap;
        }

        .btn-generate-ledger, .btn-detailed-report {
            background: #28a745;
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 6px;
            font-size: 14px;
            font-weight: 500;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: background 0.3s;
            text-decoration: none;
            flex: 1;
            justify-content: center;
            min-width: 160px;
        }

        .btn-detailed-report {
            background: #007bff;
        }

        .btn-generate-ledger:hover {
            background: #218838;
        }

        .btn-detailed-report:hover {
            background: #0056b3;
            color: white;
        }

        .btn-generate-ledger i, .btn-detailed-report i {
            font-size: 16px;
        }

        .stat-info {
            display: flex;
            flex-direction: column;
        }

        .stat-label {
            font-size: 14px;
            color: #6c757d;
            margin-bottom: 8px;
        }

        .stat-number {
            font-size: 28px;
            font-weight: 700;
            color: #2c3e50;
            margin-bottom: 8px;
        }

        .stat-change {
            font-size: 12px;
            display: flex;
            align-items: center;
            gap: 4px;
        }

        .stat-change.positive {
            color: #28a745;
        }

        .stat-change.negative {
            color: #dc3545;
        }

        .stat-icon {
            width: 60px;
            height: 60px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
            color: white;
        }

        .stat-icon.blue {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }

        .stat-icon.yellow {
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
        }

        .stat-icon.green {
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        }

        /* Chart Section */
        .chart-section {
            background: white;
            border-radius: 12px;
            padding: 25px;
            margin-bottom: 30px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .chart-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .chart-header h3 {
            font-size: 18px;
            font-weight: 600;
            color: #2c3e50;
        }

        .chart-controls {
            display: flex;
            gap: 10px;
        }

        .filter-select {
            padding: 8px 12px;
            border: 1px solid #ddd;
            border-radius: 6px;
            font-size: 14px;
            background: white;
        }

        .chart-container {
            position: relative;
            height: 300px;
            background: linear-gradient(180deg, #f8f9fa 0%, #ffffff 100%);
            border-radius: 8px;
            overflow: hidden;
        }

        .chart-tooltip {
            position: absolute;
            top: 20px;
            left: 400px;
            background: #2c3e50;
            color: white;
            padding: 6px 12px;
            border-radius: 6px;
            font-size: 12px;
            font-weight: 600;
        }

        .chart-tooltip::after {
            content: '';
            position: absolute;
            bottom: -6px;
            left: 50%;
            transform: translateX(-50%);
            width: 0;
            height: 0;
            border-left: 6px solid transparent;
            border-right: 6px solid transparent;
            border-top: 6px solid #2c3e50;
        }

        /* Table Section */
        .table-section {
            background: white;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .orders-table {
            width: 100%;
            border-collapse: collapse;
        }

        .orders-table th {
            background-color: #f8f9fa;
            padding: 15px;
            text-align: left;
            font-weight: 600;
            font-size: 14px;
            color: #2c3e50;
            border-bottom: 2px solid #e9ecef;
        }

        .orders-table td {
            padding: 15px;
            border-bottom: 1px solid #f0f0f0;
            font-size: 14px;
        }

        .orders-table tbody tr:hover {
            background-color: #f8f9fa;
        }

        .status {
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
        }

        .status.completed {
            background-color: #d4edda;
            color: #155724;
        }

        .status.processing {
            background-color: #d1ecf1;
            color: #0c5460;
        }

        .status.rejected {
            background-color: #f8d7da;
            color: #721c24;
        }
        
        .status.pending {
            background-color: #fff3cd;
            color: #856404;
        }
        
        .payment-method {
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 11px;
            font-weight: 600;
            text-transform: uppercase;
        }
        
        .payment-method.cod {
            background-color: #d4edda;
            color: #155724;
        }
        
        .payment-method.razorpay {
            background-color: #cce5ff;
            color: #004085;
        }
        
        .payment-method.wallet {
            background-color: #e2e3e5;
            color: #383d41;
        }

        /* Responsive Design */
        @media (max-width: 1200px) {
            .stats-grid {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        /* Sales Report Styles */
        .btn-generate {
            background: #007bff;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 6px;
            font-size: 14px;
            cursor: pointer;
            transition: background 0.3s;
        }
        
        .btn-generate:hover {
            background: #0056b3;
        }
        
        .report-summary {
            margin: 20px 0;
        }
        
        .summary-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 15px;
            margin-bottom: 20px;
        }
        
        .summary-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            border-radius: 10px;
            text-align: center;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }
        
        .summary-value {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 5px;
        }
        
        .summary-label {
            font-size: 12px;
            opacity: 0.9;
        }
        
        .download-section {
            margin-top: 20px;
            text-align: center;
            padding: 20px;
            background: #f8f9fa;
            border-radius: 8px;
        }
        
        .btn-download {
            background: #28a745;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 6px;
            font-size: 14px;
            cursor: pointer;
            margin: 0 10px;
            transition: background 0.3s;
        }
        
        .btn-download:hover {
            background: #218838;
        }
        
        .btn-download i {
            margin-right: 5px;
        }

        @media (max-width: 768px) {
            .main-content {
                flex-direction: column;
            }
            
            .sidebar {
                width: 100%;
                min-height: auto;
            }
            
            .sidebar nav ul {
                display: flex;
                overflow-x: auto;
                padding: 10px;
            }
            
            .sidebar nav li {
                margin: 0 5px;
                white-space: nowrap;
            }
            
            .stats-grid {
                grid-template-columns: 1fr;
            }
            
            .chart-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 15px;
            }
            
            .orders-table {
                font-size: 12px;
            }
            
            .orders-table th,
            .orders-table td {
                padding: 10px 8px;
            }
            
            .summary-cards {
                grid-template-columns: repeat(2, 1fr);
            }
            
            .btn-download {
                display: block;
                width: 100%;
                margin: 5px 0;
            }
        }
    </style>
</head>
<body>
    <div class="admin-container">
        <!-- Header -->
        <div class="header">
          
            <div class="header-main">
                <h1 class="brand">Melodia</h1>
                <div class="user-profile">
                    <span class="username">ADMIN</span>
                    <i class="fas fa-user-circle"></i>
                </div>
            </div>
        </div>

        <div class="main-content">
            <!-- Sidebar -->
            <div class="sidebar">
                <nav>
                    <ul>
                        <li class="active"><a href="/admin/dashboard"><i class="fas fa-tachometer-alt"></i> Dashboard</a></li>
                        <li><a href="/admin/products"><i class="fas fa-box"></i> Products</a></li>
                        <li><a href="/admin/orders"><i class="fas fa-list"></i> Order Management</a></li>
                        <li><a href="/admin/customer"><i class="fas fa-users"></i> Users</a></li>
                        <li><a href="/admin/sales-report"><i class="fas fa-chart-bar"></i> Sales Report</a></li>
                        <li><a href="/admin/coupons"><i class="fas fa-tags"></i> Coupons</a></li>
                        <li><a href="/admin/category"><i class="fas fa-folder"></i> Category</a></li>
                        <li><a href="/admin/banners"><i class="fas fa-flag"></i> Banners</a></li>
                        <li><a href="/admin/settings"><i class="fas fa-cog"></i> Settings</a></li>
                        <li><a href="/admin/logout"><i class="fas fa-sign-out-alt"></i> Logout</a></li>
                    </ul>
                </nav>
            </div>

            <!-- Dashboard Content -->
            <div class="dashboard-content">
                <!-- Stats Cards -->
                <!-- Period Filter -->
                <div class="period-filter">
                    <div class="filter-group">
                        <label>Period</label>
                        <select id="periodSelect" class="filter-select">
                            <option value="monthly">Monthly</option>
                            <option value="weekly">Weekly</option>
                            <option value="daily">Daily</option>
                            <option value="yearly">Yearly</option>
                        </select>
                    </div>
                    <div class="filter-group">
                        <label>Year</label>
                        <select id="yearSelect" class="filter-select">
                            <option value="2024">2024</option>
                            <option value="2025" selected>2025</option>
                        </select>
                    </div>
                    <div class="filter-group">
                        <label>Month</label>
                        <select id="monthSelect" class="filter-select">
                            <option value="0">January</option>
                            <option value="1">February</option>
                            <option value="2">March</option>
                            <option value="3">April</option>
                            <option value="4">May</option>
                            <option value="5">June</option>
                            <option value="6">July</option>
                            <option value="7">August</option>
                            <option value="8">September</option>
                            <option value="9">October</option>
                            <option value="10" selected>November</option>
                            <option value="11">December</option>
                        </select>
                    </div>
                    <button id="applyFilters" class="btn-apply">Apply Filters</button>
                </div>

                <!-- Stats Cards -->
                <div class="stats-grid">
                    <div class="stat-card total-sales">
                        <div class="stat-content">
                            <div class="stat-label">Total Sales</div>
                            <div class="stat-number" id="totalSalesValue">₹<%= stats.totalSales.toLocaleString() %></div>
                        </div>
                    </div>

                    <div class="stat-card visitors">
                        <div class="stat-content">
                            <div class="stat-label">Visitors</div>
                            <div class="stat-number" id="visitorsValue"><%= stats.totalUsers.toLocaleString() %></div>
                        </div>
                    </div>

                    <div class="stat-card total-orders">
                        <div class="stat-content">
                            <div class="stat-label">Total Orders</div>
                            <div class="stat-number" id="totalOrdersValue"><%= stats.totalOrders.toLocaleString() %></div>
                        </div>
                    </div>

                    <div class="stat-card users">
                        <div class="stat-content">
                            <div class="stat-label">Users</div>
                            <div class="stat-number" id="usersValue"><%= stats.totalUsers.toLocaleString() %></div>
                        </div>
                    </div>
                </div>

                <!-- Charts Section  -->
                 <div class="charts-container">
                    <div class="chart-section sales-overview">
                        <div class="chart-header">
                            <h3>Sales Overview</h3>
                            <div class="chart-legend">
                                <span class="legend-item">
                                    <span class="legend-color sales-color"></span>
                                    Sales Amount
                                </span>
                            </div>
                        </div>
                        <div class="chart-container">
                            <canvas id="salesChart" width="400" height="200"></canvas>
                        </div>
                    </div>

                    <div class="chart-section orders-overview">
                        <div class="chart-header">
                            <h3>Orders Overview</h3>
                            <div class="chart-legend">
                                <span class="legend-item">
                                    <span class="legend-color orders-color"></span>
                                    Orders Count
                                </span>
                            </div>
                        </div>
                        <div class="chart-container">
                            <canvas id="ordersChart" width="400" height="200"></canvas>
                        </div>
                    </div>
                </div>



                 <!-- Generate Ledger Book Section  -->
             <div class="ledger-section">
                    <div class="ledger-header">
                        <h3>Generate Ledger Book</h3>
                    </div>
                    <div class="ledger-form">
                        <div class="date-inputs">
                            <div class="date-group">
                                <label>Start Date</label>
                                <input type="date" id="ledgerStartDate" class="date-input" value="2025-09-30">
                            </div>
                            <div class="date-group">
                                <label>End Date</label>
                                <input type="date" id="ledgerEndDate" class="date-input" value="2025-10-24">
                            </div>
                        </div>
                        <div class="ledger-buttons">
                            <button id="generateLedgerPDF" class="btn-generate-ledger">
                                <i class="fas fa-download"></i> Generate Ledger PDF
                            </button>
                            <a href="/admin/sales-report" class="btn-detailed-report">
                                <i class="fas fa-chart-line"></i> View Detailed Report
                            </a>
                        </div>
                    </div>
                </div>

                 <!-- Latest Orders Table  -->
                <div class="table-section">
                    <div style="padding: 20px; border-bottom: 1px solid #e9ecef;">
                        <h3 style="margin: 0; color: #2c3e50;">Latest Orders</h3>
                    </div>
                    <table class="orders-table">
                        <thead>
                            <tr>
                                <th>Order ID</th>
                                <th>Customer</th>
                                <th>Date</th>
                                <th>Items</th>
                                <th>Total</th>
                                <th>Payment</th>
                                <th>Status</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (recentOrders && recentOrders.length > 0) { %>
                                <% recentOrders.forEach(order => { %>
                                    <tr>
                                        <td>
                                            <a href="/admin/orders/<%= order.orderId %>" style="color: #007bff; text-decoration: none;">
                                                <%= order.orderId %>
                                            </a>
                                        </td>
                                        <td>
                                            <% if (order.userId) { %>
                                                <%= order.userId.firstName %> <%= order.userId.lastName %>
                                                <br><small style="color: #6c757d;"><%= order.userId.email %></small>
                                            <% } else { %>
                                                Guest User
                                            <% } %>
                                        </td>
                                        <td><%= new Date(order.orderDate).toLocaleDateString() %></td>
                                        <td><%= order.items.length %> items</td>
                                        <td>₹<%= order.totalAmount.toFixed(2) %></td>
                                        <td>
                                            <span class="payment-method <%= order.paymentMethod.toLowerCase() %>">
                                                <%= order.paymentMethod %>
                                            </span>
                                        </td>
                                        <td>
                                            <% 
                                            let statusClass = 'processing';
                                            if (order.orderStatus === 'Delivered') statusClass = 'completed';
                                            else if (order.orderStatus === 'Cancelled') statusClass = 'rejected';
                                            else if (order.orderStatus === 'Shipped') statusClass = 'processing';
                                            else if (order.orderStatus === 'Pending') statusClass = 'pending';
                                            %>
                                            <span class="status <%= statusClass %>"><%= order.orderStatus %></span>
                                        </td>
                                        <td>
                                            <div style="display: flex; gap: 5px;">
                                                <a href="/admin/orders/<%= order.orderId %>" 
                                                   style="color: #007bff; text-decoration: none; padding: 4px 8px; border: 1px solid #007bff; border-radius: 4px; font-size: 12px;"
                                                   title="View Order Details">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                                <a href="/admin/orders" 
                                                   style="color: #28a745; text-decoration: none; padding: 4px 8px; border: 1px solid #28a745; border-radius: 4px; font-size: 12px;"
                                                   title="Manage Orders">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                <% }) %>
                            <% } else { %>
                                <tr>
                                    <td colspan="8" style="text-align: center; padding: 40px; color: #6c757d;">
                                        <i class="fas fa-shopping-cart" style="font-size: 48px; margin-bottom: 16px; opacity: 0.5;"></i>
                                        <br>No orders found
                                    </td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div> 
    </div> 

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        let salesChart = null;
        let ordersChart = null;
        
        // Initialize dashboard
        document.addEventListener('DOMContentLoaded', function() {
            initializeDashboard();
            loadDashboardData();
        });
        
        function initializeDashboard() {
            // Apply filters button
            document.getElementById('applyFilters').addEventListener('click', loadDashboardData);
            
            // Ledger generation
            document.getElementById('generateLedgerPDF').addEventListener('click', generateLedgerPDF);
            
            // Set default dates (last 30 days)
            const today = new Date();
            const thirtyDaysAgo = new Date();
            thirtyDaysAgo.setDate(today.getDate() - 30);
            
            document.getElementById('ledgerEndDate').value = today.toISOString().split('T')[0];
            document.getElementById('ledgerStartDate').value = thirtyDaysAgo.toISOString().split('T')[0];
        }
        
        async function loadDashboardData() {
            const period = document.getElementById('periodSelect').value;
            const year = document.getElementById('yearSelect').value;
            const month = document.getElementById('monthSelect').value;
            
            try {
                // Build query parameters
                const params = new URLSearchParams({ period });
                if (period === 'monthly') {
                    params.append('year', year);
                    params.append('month', month);
                }
                
                // Fetch dashboard data
                const response = await fetch(`/admin/api/sales-report?${params}`);
                const result = await response.json();
                
                if (result.success) {
                    updateDashboard(result.data);
                } else {
                    console.error('Error loading dashboard data:', result.message);
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }
        
        function updateDashboard(data) {
            // Update stats cards
            document.getElementById('totalSalesValue').textContent = `₹${data.summary.totalRevenue.toLocaleString()}`;
            document.getElementById('visitorsValue').textContent = data.summary.totalOrders || '0';
            document.getElementById('totalOrdersValue').textContent = data.summary.totalOrders || '0';
            document.getElementById('usersValue').textContent = data.summary.totalOrders || '0';
            
            // Update charts
            updateSalesChart(data.chartData || []);
            updateOrdersChart(data.chartData || []);
        }
        
        function updateSalesChart(chartData) {
            const ctx = document.getElementById('salesChart').getContext('2d');
            
            // Destroy existing chart
            if (salesChart) {
                salesChart.destroy();
            }
            
            // Generate sample data if no real data
            const labels = chartData.length > 0 
                ? chartData.map(item => new Date(item.date).toLocaleDateString())
                : ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
            
            const salesData = chartData.length > 0 
                ? chartData.map(item => item.sales)
                : [30000, 45000, 35000, 50000, 40000, 60000, 45000, 55000, 65000, 50000, 70000, 60000];
            
            // Create sales chart (line chart like in your image)
            salesChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Sales Amount',
                        data: salesData,
                        borderColor: '#007bff',
                        backgroundColor: 'rgba(0, 123, 255, 0.1)',
                        tension: 0.4,
                        fill: true,
                        pointBackgroundColor: '#007bff',
                        pointBorderColor: '#007bff',
                        pointRadius: 4
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        x: {
                            grid: {
                                display: false
                            }
                        },
                        y: {
                            beginAtZero: true,
                            grid: {
                                color: '#f0f0f0'
                            },
                            ticks: {
                                callback: function(value) {
                                    return '₹' + (value / 1000) + 'K';
                                }
                            }
                        }
                    }
                }
            });
        }
        
        function updateOrdersChart(chartData) {
            const ctx = document.getElementById('ordersChart').getContext('2d');
            
            // Destroy existing chart
            if (ordersChart) {
                ordersChart.destroy();
            }
            
            // Generate sample data if no real data
            const labels = chartData.length > 0 
                ? chartData.map(item => new Date(item.date).toLocaleDateString())
                : ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
            
            const ordersData = chartData.length > 0 
                ? chartData.map(item => item.orders)
                : [2, 2, 4, 2, 3, 3, 2, 4, 3, 2, 3, 2];
            
            // Create orders chart (bar chart like in your image)
            ordersChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Orders Count',
                        data: ordersData,
                        backgroundColor: '#28a745',
                        borderRadius: 4,
                        barThickness: 20
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        x: {
                            grid: {
                                display: false
                            }
                        },
                        y: {
                            beginAtZero: true,
                            max: 5,
                            grid: {
                                color: '#f0f0f0'
                            },
                            ticks: {
                                stepSize: 1
                            }
                        }
                    }
                }
            });
        }
        
        // Generate Ledger PDF
        function generateLedgerPDF() {
            const startDate = document.getElementById('ledgerStartDate').value;
            const endDate = document.getElementById('ledgerEndDate').value;
            
            if (!startDate || !endDate) {
                alert('Please select both start and end dates');
                return;
            }
            
            if (new Date(startDate) > new Date(endDate)) {
                alert('Start date cannot be later than end date');
                return;
            }
            
            // Show loading state
            const btn = document.getElementById('generateLedgerPDF');
            const originalText = btn.innerHTML;
            btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Generating...';
            btn.disabled = true;
            
            // Build download URL
            const params = new URLSearchParams({
                startDate: startDate,
                endDate: endDate,
                type: 'ledger'
            });
            
            const url = `/admin/reports/download/pdf?${params}`;
            
            // Create temporary link and click it
            const link = document.createElement('a');
            link.href = url;
            link.download = `ledger-book-${startDate}-to-${endDate}.pdf`;
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
            
            // Reset button after 2 seconds
            setTimeout(() => {
                btn.innerHTML = originalText;
                btn.disabled = false;
            }, 2000);
        }
    </script>

  
<script>
// Disable back button functionality when on dashboard
(function() {
    // Track if we're on the dashboard page
    const isDashboard = window.location.pathname.includes('/dashboard');
    
    if (isDashboard) {
        // Push current state to history to prevent back navigation
        history.pushState(null, null, location.href);
        
        // Listen for popstate events (back button clicks)
        window.addEventListener('popstate', function(event) {
            console.log('Back button pressed on dashboard');
            // Push state again to stay on current page
            history.pushState(null, null, location.href);
            
            // Optional: Show a message to user
            // alert('Use the logout button to exit the dashboard');
        });
        
        // Prevent browser back button navigation
        window.addEventListener('beforeunload', function() {
            // Clear any cached data
            if (window.performance && window.performance.navigation.type === 2) {
                window.location.reload();
            }
        });
        
        // Handle page visibility changes (when user switches tabs/windows)
        document.addEventListener('visibilitychange', function() {
            if (document.visibilityState === 'visible') {
                // Verify session is still valid when page becomes visible again
                fetch('/admin/dashboard', {
                    method: 'GET',
                    credentials: 'same-origin',
                    cache: 'no-cache'
                }).then(response => {
                    if (response.redirected || response.status === 401) {
                        window.location.href = '/admin/login';
                    }
                }).catch(error => {
                    console.error('Session check failed:', error);
                });
            }
        });
    }
    
    // Prevent caching for all admin pages
    window.addEventListener('pageshow', function(event) {
        if (event.persisted) {
            // Page was loaded from browser cache
            console.log('Page loaded from cache, reloading...');
            window.location.reload();
        }
    });
    
    // Clear browser history on logout
    function handleLogout() {
        // Clear any stored data
        localStorage.clear();
        sessionStorage.clear();
        
        // Replace current history entry
        history.replaceState(null, null, '/admin/login');
        
        // Navigate to logout
        window.location.href = '/admin/logout';
        
        return false; // Prevent default link behavior
    }
    
    // Make logout function globally available
    window.handleLogout = handleLogout;
    
    // Add logout handler to logout links
    document.addEventListener('DOMContentLoaded', function() {
        const logoutLinks = document.querySelectorAll('a[href*="logout"]');
        logoutLinks.forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                handleLogout();
            });
        });
    });
    
    // Periodically check session validity (optional)
    if (isDashboard) {
        setInterval(function() {
            fetch('/admin/dashboard', {
                method: 'HEAD',
                credentials: 'same-origin',
                cache: 'no-cache'
            }).then(response => {
                if (response.redirected || response.status === 401) {
                    console.log('Session expired, redirecting to login');
                    window.location.href = '/admin/login';
                }
            }).catch(error => {
                console.error('Session check failed:', error);
            });
        }, 300000); // Check every 5 minutes
    }
})();
</script>

</body>
</html>
