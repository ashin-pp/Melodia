<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Add Product - Melodia Admin</title>
  
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/croppie/2.6.5/croppie.min.css" />
  <!-- SweetAlert2 CDN -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: #f5f5f5;
      color: #333;
    }

    .admin-container {
      min-height: 100vh;
      display: flex;
      flex-direction: column;
    }

    /* Header Styles */
    .header {
      background: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%);
      color: white;
      padding: 20px 20px;
    }

    .breadcrumb {
      font-size: 12px;
      opacity: 0.7;
      margin-bottom: 8px;
    }

    .header-main {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .brand {
      font-size: 24px;
      font-weight: 600;
      letter-spacing: -0.5px;
    }

    .user-profile {
      display: flex;
      align-items: center;
      gap: 10px;
    }

    .username {
      font-size: 14px;
      font-weight: 500;
      text-transform: uppercase;
    }

    .user-profile i {
      font-size: 20px;
    }

    /* Main Content Layout */
    .main-content {
      display: flex;
      flex: 1;
    }

    /* Sidebar Styles */
    .sidebar {
      width: 200px;
      background-color: #f8f9fa;
      border-right: 1px solid #e9ecef;
      min-height: calc(100vh - 80px);
    }

    .sidebar nav ul {
      list-style: none;
      padding: 20px 0;
    }

    .sidebar nav li {
      margin: 5px 0;
    }

    .sidebar nav a {
      display: flex;
      align-items: center;
      padding: 12px 20px;
      text-decoration: none;
      color: #6c757d;
      font-size: 14px;
      transition: all 0.3s ease;
    }

    .sidebar nav a:hover,
    .sidebar nav li.active a {
      background-color: #000;
      color: white;
    }

    .sidebar nav a i {
      margin-right: 10px;
      width: 16px;
    }

    /* Products Content */
    .products-content {
      flex: 1;
      padding: 30px;
      background-color: #fff;
    }

    .page-header {
      margin-bottom: 30px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .page-header h2 {
      font-size: 28px;
      font-weight: 700;
      color: #2c3e50;
      margin-bottom: 8px;
    }

    .breadcrumb-nav {
      font-size: 14px;
      color: #6c757d;
      margin-bottom: 8px;
    }

    .breadcrumb-nav a {
      color: #667eea;
      text-decoration: none;
    }

    .breadcrumb-nav a:hover {
      text-decoration: underline;
    }

    /* Form Container */
    .form-container {
      background: white;
      border-radius: 12px;
      padding: 30px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
      border: 1px solid #f0f0f0;
    }

    /* Error Messages */
    .error-container {
      background-color: #f8d7da;
      color: #721c24;
      border: 1px solid #f1aeb5;
      border-radius: 8px;
      padding: 15px;
      margin-bottom: 20px;
    }

    .error-container ul {
      margin-left: 20px;
    }

    /* Form Elements */
    .form-group {
      margin-bottom: 20px;
    }

    .form-label {
      display: block;
      font-weight: 600;
      color: #2c3e50;
      margin-bottom: 8px;
      font-size: 14px;
    }

    .required {
      color: #dc3545;
    }

    .form-input,
    .form-select,
    .form-textarea {
      width: 100%;
      padding: 10px 15px;
      border: 1px solid #ddd;
      border-radius: 8px;
      font-size: 14px;
      background: white;
      transition: all 0.3s ease;
    }

    .form-input:focus,
    .form-select:focus,
    .form-textarea:focus {
      outline: none;
      border-color: #667eea;
      box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
    }

    .form-textarea {
      resize: vertical;
      min-height: 80px;
    }

    /* Image Upload Section */
    .image-upload-section {
      background: #f8f9fa;
      border-radius: 8px;
      padding: 20px;
      border: 2px dashed #dee2e6;
      transition: all 0.3s ease;
    }

    .image-upload-section:hover {
      border-color: #667eea;
      background: #f0f4ff;
    }

    .upload-btn {
      background: #667eea;
      color: white;
      padding: 10px 20px;
      border-radius: 8px;
      font-size: 14px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      display: inline-flex;
      align-items: center;
      gap: 8px;
      border: none;
    }

    .upload-btn:hover {
      background: #5a6fd8;
      transform: translateY(-1px);
      box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
    }

    .image-counter {
      font-size: 14px;
      color: #6c757d;
      margin: 10px 0;
    }

    .image-previews {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
      gap: 15px;
      margin-top: 20px;
    }

    .image-preview-item {
      position: relative;
      border-radius: 8px;
      overflow: hidden;
      border: 1px solid #e9ecef;
    }

    .image-preview-item img {
      width: 100%;
      height: 120px;
      object-fit: cover;
    }

    .remove-image-btn {
      position: absolute;
      top: 5px;
      right: 5px;
      background: #dc3545;
      color: white;
      border: none;
      border-radius: 50%;
      width: 24px;
      height: 24px;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      font-size: 12px;
      transition: all 0.3s ease;
    }

    .remove-image-btn:hover {
      background: #c82333;
    }

    .image-number {
      position: absolute;
      bottom: 5px;
      left: 5px;
      background: #667eea;
      color: white;
      border-radius: 4px;
      padding: 2px 6px;
      font-size: 11px;
      font-weight: 600;
    }

    /* Variants Section */
    .variants-container {
      background: #f8f9fa;
      border-radius: 8px;
      padding: 20px;
      border: 1px solid #e9ecef;
    }

    .variant-row {
      display: flex;
      gap: 10px;
      margin-bottom: 10px;
      align-items: center;
    }

    .variant-input {
      flex: 1;
      padding: 8px 12px;
      border: 1px solid #ddd;
      border-radius: 6px;
      font-size: 14px;
    }

    .variant-input:focus {
      outline: none;
      border-color: #667eea;
      box-shadow: 0 0 0 2px rgba(102, 126, 234, 0.1);
    }

    .remove-variant-btn {
      background: #dc3545;
      color: white;
      border: none;
      border-radius: 6px;
      padding: 8px 12px;
      cursor: pointer;
      font-weight: 600;
      transition: all 0.3s ease;
    }

    .remove-variant-btn:hover {
      background: #c82333;
      transform: translateY(-1px);
    }

    .add-variant-btn {
      background: #667eea;
      color: white;
      padding: 8px 16px;
      border-radius: 6px;
      font-size: 14px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      border: none;
      margin-top: 10px;
    }

    .add-variant-btn:hover {
      background: #5a6fd8;
      transform: translateY(-1px);
    }

    /* Cropper Modal */
    .cropper-modal {
      position: fixed;
      inset: 0;
      background: rgba(0, 0, 0, 0.8);
      z-index: 1000;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .cropper-modal.hidden {
      display: none;
    }

    .cropper-content {
      background: white;
      border-radius: 12px;
      padding: 24px;
      max-width: 90vw;
      max-height: 90vh;
      width: 800px;
    }

    .cropper-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
    }

    .cropper-header h3 {
      font-size: 18px;
      font-weight: 600;
      color: #2c3e50;
    }

    .close-cropper {
      background: none;
      border: none;
      font-size: 24px;
      cursor: pointer;
      color: #6c757d;
    }

    .close-cropper:hover {
      color: #2c3e50;
    }

    .cropper-body {
      display: flex;
      gap: 20px;
    }

    .cropper-image-container {
      flex: 2;
    }

    .cropper-preview-container {
      flex: 1;
    }

    .preview-box {
      width: 150px;
      height: 150px;
      border: 1px solid #ddd;
      border-radius: 8px;
      overflow: hidden;
      margin: 0 auto 20px;
    }

    .save-cropped-btn {
      width: 100%;
      background: #667eea;
      color: white;
      padding: 10px;
      border-radius: 8px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      border: none;
    }

    .save-cropped-btn:hover {
      background: #5a6fd8;
    }

    /* Form Actions */
    .form-actions {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-top: 30px;
      padding-top: 20px;
      border-top: 1px solid #e9ecef;
    }

    .back-btn {
      background: #6c757d;
      color: white;
      padding: 10px 20px;
      border-radius: 8px;
      font-size: 14px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      text-decoration: none;
      display: inline-flex;
      align-items: center;
      gap: 8px;
    }

    .back-btn:hover {
      background: #545b62;
      color: white;
      text-decoration: none;
      transform: translateY(-1px);
    }

    .save-btn {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      padding: 10px 20px;
      border-radius: 8px;
      font-size: 14px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      display: inline-flex;
      align-items: center;
      gap: 8px;
      border: none;
    }

    .save-btn:hover {
      transform: translateY(-1px);
      box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
    }

    /* Helper Text */
    .helper-text {
      font-size: 12px;
      color: #6c757d;
      margin-top: 5px;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      .main-content {
        flex-direction: column;
      }
      
      .sidebar {
        width: 100%;
        min-height: auto;
      }
      
      .sidebar nav ul {
        display: flex;
        overflow-x: auto;
        padding: 10px;
      }
      
      .sidebar nav li {
        margin: 0 5px;
        white-space: nowrap;
      }
      
      .products-content {
        padding: 20px;
      }
      
      .variant-row {
        flex-direction: column;
        align-items: stretch;
      }
      
      .variant-input {
        margin-bottom: 8px;
      }
      
      .cropper-body {
        flex-direction: column;
      }
      
      .form-actions {
        flex-direction: column;
        gap: 15px;
      }
      /* Add this to your existing styles */
.rotate-btn {
  background: #6c757d;
  color: white;
  padding: 6px 10px;
  border-radius: 4px;
  font-size: 12px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  border: none;
  margin-right: 8px;
  margin-bottom: 10px;
}

.rotate-btn:hover {
  background: #545b62;
}

/* Croppie specific styles */
.croppie-container {
  width: 100% !important;
  height: 400px !important;
}

.croppie-container .cr-boundary {
  width: 100% !important;
  height: 400px !important;
}

.croppie-container .cr-viewport {
  border: 2px solid #667eea !important;
  box-shadow: 0 0 0 1000px rgba(0, 0, 0, 0.5) !important;
}

      
    }
  </style>
</head>
<body>
  <div class="admin-container">
    <!-- Header -->
    <div class="header">
      <div class="header-main">
        <h1 class="brand">Melodia</h1>
        <div class="user-profile">
          <span class="username">ADMIN</span>
          <i class="fas fa-user-circle"></i>
        </div>
      </div>
    </div>

    <div class="main-content">
      <!-- Sidebar -->
      <div class="sidebar">
        <nav>
          <ul>
            <li><a href="/admin/dashboard"><i class="fas fa-tachometer-alt"></i> Dashboard</a></li>
            <li class="active"><a href="/admin/products"><i class="fas fa-box"></i> Products</a></li>
            <li><a href="/admin/orders"><i class="fas fa-list"></i> Order Lists</a></li>
            <li><a href="/admin/customer"><i class="fas fa-users"></i>Users</a></li>
            <li><a href="/admin/sales-report"><i class="fas fa-chart-bar"></i> Sales Report</a></li>
            <li><a href="/admin/coupons"><i class="fas fa-tags"></i> Coupons</a></li>
            <li><a href="/admin/category"><i class="fas fa-folder"></i> Category</a></li>
            <li><a href="/admin/banners"><i class="fas fa-flag"></i> Banners</a></li>
            <li><a href="/admin/settings"><i class="fas fa-cog"></i> Settings</a></li>
            <li><a href="/admin/logout"><i class="fas fa-sign-out-alt"></i> Logout</a></li>
          </ul>
        </nav>
      </div>

      <!-- Products Content -->
      <div class="products-content">
        <!-- Page Header -->
        <div class="page-header">
          <div>
            <div class="breadcrumb-nav">
              <a href="/admin/products">Products</a> / Add Product
            </div>
            <h2>Add New Product</h2>
          </div>
        </div>

        <!-- Form Container -->
        <div class="form-container">
          <% if (typeof errors !== "undefined" && errors.length > 0) { %>
            <div class="error-container">
              <ul>
                <% errors.forEach(function(msg) { %>
                  <li><%= msg %></li>
                <% }) %>
              </ul>
            </div>
          <% } %>

          <!-- Show existing images if this is a validation error re-render -->
          <% if (old && old.images && old.images.length > 0) { %>
            <div class="form-group">
              <label class="form-label">Previously Selected Images</label>
              <div class="image-previews">
                <% old.images.forEach(function(img, index) { %>
                  <div class="image-preview-item">
                    <img src="<%= typeof img === 'string' ? img : img.url %>" alt="Product image <%= index + 1 %>">
                    <div class="image-number"><%= index + 1 %></div>
                  </div>
                <% }) %>
              </div>
              <p class="helper-text">Please re-select your images below to continue.</p>
            </div>
          <% } %>

          <form action="/admin/products/add" method="POST" enctype="multipart/form-data">
            <div class="form-group">
              <label class="form-label">Product Name <span class="required">*</span></label>
              <input type="text" name="productName" required
                value="<%= old && old.productName ? old.productName : '' %>"
                class="form-input" placeholder="Enter product name"/>
            </div>

            <div class="form-group">
              <label class="form-label">Brand <span class="required">*</span></label>
              <input type="text" name="brand" required
                value="<%= old && old.brand ? old.brand : '' %>"
                class="form-input" placeholder="Enter brand name"/>
            </div>

            <div class="form-group">
              <label class="form-label">Category <span class="required">*</span></label>
              <select name="categoryId" required class="form-select">
                <option value="">-- Select Category --</option>
                <% categories.forEach(cat => { %>
                  <option value="<%= cat._id %>"
                    <%= old && old.categoryId == cat._id ? 'selected' : '' %>>
                    <%= cat.name %>
                  </option>
                <% }) %>
              </select>
            </div>

            <div class="form-group">
              <label class="form-label">Description <span class="required">*</span></label>
              <textarea name="description" rows="4" required
                class="form-textarea" placeholder="Enter product description"><%= old && old.description ? old.description : '' %></textarea>
            </div>

            <div class="form-group">
              <label class="form-label">Offer (%)</label>
              <input type="number" min="0" max="100" name="offer"
                value="<%= old && old.offer ? old.offer : 0 %>"
                class="form-input" placeholder="Enter offer percentage"/>
              <p class="helper-text">Optional: Enter discount percentage (0-100)</p>
            </div>
            
            <!-- Image Upload Section -->
            <div class="form-group">
              <label class="form-label">Product Images <span class="required">*</span></label>
              <div class="image-upload-section">
                <p class="helper-text">Upload at least 3 high-quality images. Images will be automatically cropped to square format.</p>
                
                <!-- Hidden file input for raw files -->
                <input type="file" id="file-input" accept="image/*" style="display: none;" multiple>
                
                <!-- Button to trigger file selection -->
                <button type="button" onclick="document.getElementById('file-input').click()" class="upload-btn">
                  <i class="fas fa-plus"></i> Select Images
                </button>
                
                <!-- Image counter -->
                <div class="image-counter">
                  Selected images: <span id="image-count">0</span> / Minimum required: 3
                </div>

                <!-- Preview Container -->
                <div id="image-previews" class="image-previews"></div>
                
                <!-- Hidden file input for final cropped files (sent to server) -->
                <input type="file" id="final-images" name="images" multiple style="display: none;">
              </div>
            </div>

            <!-- Variants Section -->
            <div class="form-group">
              <label class="form-label">Product Variants (Color, Price, Stock)</label>
              <div class="variants-container">
                <div id="variants-area">
                  <% let variants = (old && old.variants) ? old.variants : [{ color: '', price: '', stock: '' }]; %>
                  <% variants.forEach(function(variant, i) { %>
                    <div class="variant-row">
                      <input type="text" name="variants[<%= i %>][color]" placeholder="Color (e.g., Red, Blue)" required
                        value="<%= variant.color || '' %>"
                        class="variant-input"/>
                      <input type="number" min="0" name="variants[<%= i %>][price]" placeholder="Price (₹)" required
                        value="<%= variant.price || '' %>"
                        class="variant-input"/>
                      <input type="number" min="0" name="variants[<%= i %>][stock]" placeholder="Stock Quantity"
                        value="<%= variant.stock || '' %>"
                        class="variant-input"/>
                      <button type="button" onclick="removeVariantRow(this)" class="remove-variant-btn">
                        <i class="fas fa-times"></i>
                      </button>
                    </div>
                  <% }) %>
                </div>
                <button type="button" id="add-variant-btn" class="add-variant-btn">
                  <i class="fas fa-plus"></i> Add Variant
                </button>
                <p class="helper-text">Add different color variants with their respective prices and stock quantities.</p>
              </div>
            </div>
            
            <div class="form-actions">
              <a href="/admin/products" class="back-btn">
                <i class="fas fa-arrow-left"></i> Back to Products
              </a>
              <button type="submit" class="save-btn">
                <i class="fas fa-save"></i> Save Product
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>

  <!-- Cropper Modal -->
 
<div id="cropper-modal" class="cropper-modal hidden">
  <div class="cropper-content">
    <div class="cropper-header">
      <h3>Crop Image</h3>
      <button type="button" id="close-cropper-btn" class="close-cropper">&times;</button>
    </div>
    <div class="cropper-body">
      <div class="cropper-image-container">
        <!-- Croppie container -->
        <div id="croppie-container" style="width: 100%; height: 400px;"></div>
      </div>
      <div class="cropper-preview-container">
        <h4 style="margin-bottom: 10px; font-weight: 600;">Actions</h4>
        <div style="margin-bottom: 15px;">
          <button type="button" id="rotate-left" class="rotate-btn">
            <i class="fas fa-undo"></i> Rotate Left
          </button>
          <button type="button" id="rotate-right" class="rotate-btn">
            <i class="fas fa-redo"></i> Rotate Right
          </button>
        </div>
        <button type="button" id="save-cropped-btn" class="save-cropped-btn">
          <i class="fas fa-check"></i> Save Cropped Image
        </button>
      </div>
    </div>
  </div>
</div>


<script src="https://cdnjs.cloudflare.com/ajax/libs/croppie/2.6.5/croppie.min.js"></script>
<script>
  // Global variables
  let croppieInstance = null;
  const croppedBlobs = [];

  // File input change handler
  document.getElementById('file-input').addEventListener('change', function(e) {
    if (e.target.files.length > 0) {
      const file = e.target.files[0];
      initializeCroppie(file);
    }
  });

  function initializeCroppie(file) {
    // Validate file
    if (!file.type.startsWith('image/')) {
      Swal.fire({
        icon: 'error',
        title: 'Invalid File',
        text: 'Please select a valid image file.',
        confirmButtonColor: '#667eea'
      });
      return;
    }

    if (file.size > 10 * 1024 * 1024) {
      Swal.fire({
        icon: 'error',
        title: 'File Too Large',
        text: 'Please select an image smaller than 10MB.',
        confirmButtonColor: '#667eea'
      });
      return;
    }

    const reader = new FileReader();
    reader.onload = function(e) {
      showCroppieModal(e.target.result);
    };
    reader.readAsDataURL(file);
  }

  function showCroppieModal(imageSrc) {
    const modal = document.getElementById('cropper-modal');
    
    // Show modal first
    modal.classList.remove('hidden');
    
    // Initialize Croppie after modal is shown
    setTimeout(() => {
      // Destroy existing instance
      if (croppieInstance) {
        croppieInstance.destroy();
        croppieInstance = null;
      }

      // Create new Croppie instance
      const container = document.getElementById('croppie-container');
      container.innerHTML = ''; // Clear container
      
      croppieInstance = new Croppie(container, {
        viewport: {
          width: 300,
          height: 300,
          type: 'square'
        },
        boundary: {
          width: 400,
          height: 400
        },
        showZoomer: true,
        enableOrientation: true,
        enableResize: false,
        enableExif: true,
        quality: 0.9,
        format: 'jpeg'
      });

      // Bind the image to Croppie
      croppieInstance.bind({
        url: imageSrc
      }).then(() => {
        console.log('✅ Croppie initialized successfully');
      }).catch(error => {
        console.error('❌ Croppie initialization failed:', error);
        Swal.fire({
          icon: 'error',
          title: 'Failed to Load',
          text: 'Failed to load image. Please try again.',
          confirmButtonColor: '#667eea'
        });
        hideCroppieModal();
      });
    }, 300);
  }

  function hideCroppieModal() {
    const modal = document.getElementById('cropper-modal');
    modal.classList.add('hidden');
    
    if (croppieInstance) {
      croppieInstance.destroy();
      croppieInstance = null;
    }

    // Reset file input
    document.getElementById('file-input').value = '';
  }

  function saveCroppedImage() {
    if (!croppieInstance) {
      Swal.fire({
        icon: 'error',
        title: 'Not Ready',
        text: 'Image cropper is not ready.',
        confirmButtonColor: '#667eea'
      });
      return;
    }

    // Get cropped result
    croppieInstance.result({
      type: 'blob',
      size: {
        width: 800,
        height: 800
      },
      format: 'jpeg',
      quality: 0.9,
      circle: false
    }).then(function(blob) {
      if (!blob) {
        Swal.fire({
          icon: 'error',
          title: 'Export Failed',
          text: 'Failed to export cropped image.',
          confirmButtonColor: '#667eea'
        });
        return;
      }

      // Add to cropped images array
      croppedBlobs.push(blob);
      updateHiddenInput();
      updateImageCount();
      
      // Add preview
      addImagePreview(blob);
      
      // Success message
      Swal.fire({
        toast: true,
        position: 'top-end',
        icon: 'success',
        title: `Image ${croppedBlobs.length} added successfully`,
        showConfirmButton: false,
        timer: 2000
      });
      
      hideCroppieModal();
    }).catch(function(error) {
      console.error('Error getting cropped result:', error);
      Swal.fire({
        icon: 'error',
        title: 'Crop Failed',
        text: 'Failed to crop image. Please try again.',
        confirmButtonColor: '#667eea'
      });
    });
  }

  // Rotation functions
  function rotateLeft() {
    if (croppieInstance) {
      croppieInstance.rotate(-90);
    }
  }

  function rotateRight() {
    if (croppieInstance) {
      croppieInstance.rotate(90);
    }
  }

  function addImagePreview(blob) {
    const previewUrl = URL.createObjectURL(blob);
    const previewHtml = `
      <div class="image-preview-item">
        <img src="${previewUrl}" alt="Product image">
        <button type="button" onclick="removeImage(this)" class="remove-image-btn">
          <i class="fas fa-times"></i>
        </button>
        <div class="image-number">${croppedBlobs.length}</div>
      </div>
    `;
    document.getElementById('image-previews').insertAdjacentHTML('beforeend', previewHtml);
  }

  function updateHiddenInput() {
    const dataTransfer = new DataTransfer();
    croppedBlobs.forEach((blob, i) => {
      const file = new File([blob], `product-image-${i + 1}.jpg`, { 
        type: 'image/jpeg',
        lastModified: Date.now()
      });
      dataTransfer.items.add(file);
    });
    document.getElementById('final-images').files = dataTransfer.files;
  }

  function updateImageCount() {
    const count = croppedBlobs.length;
    document.getElementById('image-count').textContent = count;
    
    const counter = document.querySelector('.image-counter');
    if (count >= 3) {
      counter.style.color = '#28a745';
    } else {
      counter.style.color = '#6c757d';
    }
  }

  function removeImage(button) {
    const container = button.closest('.image-preview-item');
    const index = Array.from(container.parentElement.children).indexOf(container);
    
    const img = container.querySelector('img');
    if (img.src.startsWith('blob:')) {
      URL.revokeObjectURL(img.src);
    }
    
    croppedBlobs.splice(index, 1);
    container.remove();
    updateHiddenInput();
    updateImageCount();
    
    // Update numbering
    document.querySelectorAll('#image-previews .image-number').forEach((el, i) => {
      el.textContent = i + 1;
    });
  }

  // Event listeners
  document.getElementById('close-cropper-btn').addEventListener('click', hideCroppieModal);
  document.getElementById('save-cropped-btn').addEventListener('click', saveCroppedImage);
  document.getElementById('rotate-left').addEventListener('click', rotateLeft);
  document.getElementById('rotate-right').addEventListener('click', rotateRight);

  // Close on outside click
  document.getElementById('cropper-modal').addEventListener('click', function(e) {
    if (e.target === this) {
      hideCroppieModal();
    }
  });

  // Close on Escape key
  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape' && croppieInstance) {
      hideCroppieModal();
    }
  });

  // Variant handling (keep your existing variant code)
  document.getElementById('add-variant-btn').addEventListener('click', function() {
    const area = document.getElementById('variants-area');
    const index = area.querySelectorAll('.variant-row').length;
    const row = document.createElement('div');
    row.className = 'variant-row';
    row.innerHTML = `
      <input type="text" name="variants[${index}][color]" placeholder="Color (e.g., Red, Blue)" required class="variant-input">
      <input type="number" min="0" step="0.01" name="variants[${index}][price]" placeholder="Price (₹)" required class="variant-input">
      <input type="number" min="0" name="variants[${index}][stock]" placeholder="Stock Quantity" class="variant-input">
      <button type="button" onclick="removeVariantRow(this)" class="remove-variant-btn">
        <i class="fas fa-times"></i>
      </button>
    `;
    area.appendChild(row);
  });

  function removeVariantRow(btn) {
    const row = btn.closest('.variant-row');
    if (document.querySelectorAll('.variant-row').length > 1) {
      row.remove();
    } else {
      Swal.fire({
        icon: 'warning',
        title: 'Cannot Remove',
        text: 'At least one variant is required.',
        confirmButtonColor: '#667eea'
      });
    }
  }

  // Form validation
  document.querySelector('form').addEventListener('submit', function(e) {
    const imageCount = croppedBlobs.length;
    if (imageCount < 3) {
      e.preventDefault();
      Swal.fire({
        icon: 'error',
        title: 'Images Required',
        text: 'Please upload at least 3 images before submitting.',
        confirmButtonColor: '#667eea'
      });
      return false;
    }

    const submitBtn = this.querySelector('.save-btn');
    const originalText = submitBtn.innerHTML;
    submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Saving Product...';
    submitBtn.disabled = true;
    
    setTimeout(() => {
      submitBtn.innerHTML = originalText;
      submitBtn.disabled = false;
    }, 30000);
  });

  // Initialize
  updateImageCount();
  console.log('🚀 Croppie-based product form initialized');
</script>
</body>
</html>