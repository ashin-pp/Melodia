<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Melodia - Choose Your Style</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap');
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            background: #0a0a0a;
            color: #ffffff;
            line-height: 1.5;
        }

        /* ===== GRADIENT TEXT STYLES ===== */
        .gradient-text {
            background: linear-gradient(135deg, #2c2c2c 0%, #444444 15%, #666666 30%, #888888 45%, #ffaa00 60%, #ff6600 80%, #ff4400 100%);
            background-size: 200% 200%;
            animation: gradient-shift 4s ease infinite;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            text-fill-color: transparent;
        }

        .gradient-text-alt {
            background: linear-gradient(135deg, #1a1a1a 0%, #333333 20%, #555555 35%, #777777 50%, #ffcc00 65%, #ff8800 85%, #ff5500 100%);
            background-size: 200% 200%;
            animation: gradient-shift 3.5s ease infinite;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            text-fill-color: transparent;
        }

        @keyframes gradient-shift {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        /* ===== ANIMATIONS ===== */
        @keyframes fadeInUp {
            0% { opacity: 0; transform: translateY(30px); }
            100% { opacity: 1; transform: translateY(0); }
        }

        @keyframes fadeInLeft {
            0% { opacity: 0; transform: translateX(-50px); }
            100% { opacity: 1; transform: translateX(0); }
        }

        @keyframes fadeInRight {
            0% { opacity: 0; transform: translateX(50px); }
            100% { opacity: 1; transform: translateX(0); }
        }

        @keyframes fadeInScale {
            0% { opacity: 0; transform: scale(0.8); }
            100% { opacity: 1; transform: scale(1); }
        }

        @keyframes slideDown {
            0% { opacity: 0; transform: translateY(-20px); }
            100% { opacity: 1; transform: translateY(0); }
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .animate-on-load { opacity: 0; }
        .fade-in-up { animation: fadeInUp 0.8s ease-out forwards; }
        .fade-in-left { animation: fadeInLeft 0.8s ease-out forwards; }
        .fade-in-right { animation: fadeInRight 0.8s ease-out forwards; }
        .fade-in-scale { animation: fadeInScale 0.6s ease-out forwards; }
        .slide-down { animation: slideDown 0.6s ease-out forwards; }

        /* ===== NAVBAR ===== */
        .navbar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 18px 60px;
            background: #0a0a0a;
            border-bottom: 1px solid rgba(255, 255, 255, 0.08);
            position: fixed;
            top: 0;
            width: 100%;
            z-index: 1000;
        }

        .logo {
            display: flex;
            align-items: center;
            font-size: 22px;
            font-weight: 600;
            color: #ffffff;
            text-decoration: none;
        }

        .logo::before {
            content: "â™ª";
            margin-right: 10px;
            font-size: 26px;
        }

        .nav-links {
            display: flex;
            list-style: none;
            gap: 35px;
            align-items: center;
        }

        .nav-links a {
            color: rgba(255, 255, 255, 0.75);
            text-decoration: none;
            font-size: 14px;
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 0.8px;
            transition: color 0.3s ease;
        }

        .nav-links a:hover,
        .nav-links a.active {
            color: #ffffff;
        }

        .nav-actions {
            display: flex;
            align-items: center;
            gap: 18px;
        }

        .search-container {
            position: relative;
        }

        .search-box {
            background: rgba(255, 255, 255, 0.06);
            border: 1px solid rgba(255, 255, 255, 0.12);
            border-radius: 18px;
            padding: 9px 16px 9px 40px;
            color: #ffffff;
            outline: none;
            width: 240px;
            font-size: 13px;
            transition: all 0.3s ease;
        }

        .search-box:focus {
            background: rgba(255, 255, 255, 0.1);
            border-color: rgba(255, 255, 255, 0.25);
        }

        .search-icon {
            position: absolute;
            left: 14px;
            top: 50%;
            transform: translateY(-50%);
            color: rgba(255, 255, 255, 0.5);
            font-size: 13px;
        }

        .nav-icons {
            display: flex;
            align-items: center;
            gap: 16px;
        }

        .nav-icon {
            color: rgba(255, 255, 255, 0.75);
            font-size: 16px;
            cursor: pointer;
            transition: color 0.3s ease;
        }

        .nav-icon:hover {
            color: #ffffff;
        }

        /* ===== HERO SECTION ===== */
        .hero-section {
            background: #0a0a0a;
            padding: 100px 60px 20px;
            text-align: center;
        }

        .hero-title {
            font-size: 64px;
            font-weight: 700;
            margin-bottom: 4px;
            letter-spacing: -2px;
            line-height: 1.1;
        }

        .hero-subtitle {
            font-size: 64px;
            font-weight: 700;
            margin-bottom: 20px;
            letter-spacing: -2px;
            line-height: 1.1;
        }

        /* ===== MAIN LAYOUT ===== */
        .main-layout {
            display: flex;
            max-width: 1600px;
            margin: 0 auto;
            gap: 0;
            min-height: calc(100vh - 200px);
        }

        /* ===== SIDEBAR ===== */
        .sidebar-filters {
            width: 300px;
            background: rgba(255, 255, 255, 0.02);
            border-right: 1px solid rgba(255, 255, 255, 0.08);
            padding: 25px 20px;
            position: sticky;
            position: -webkit-sticky;
            top: 76px;
            height: fit-content;
            max-height: calc(100vh - 76px);
            overflow-y: auto;
            flex-shrink: 0;
            align-self: flex-start;
        }

        .sidebar-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
            padding-bottom: 15px;
            border-bottom: 1px solid rgba(255, 255, 255, 0.08);
        }

        .sidebar-title {
            font-size: 18px;
            font-weight: 600;
            color: #ffffff;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .sidebar-title i {
            color: rgba(255, 255, 255, 0.7);
            font-size: 16px;
        }

        .clear-all-btn {
            background: transparent;
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 6px;
            padding: 6px 12px;
            color: rgba(255, 255, 255, 0.7);
            font-size: 11px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            opacity: 0;
            pointer-events: none;
        }

        .clear-all-btn.show {
            opacity: 1;
            pointer-events: auto;
        }

        .clear-all-btn:hover {
            background: rgba(255, 255, 255, 0.08);
            color: #ffffff;
            border-color: rgba(255, 255, 255, 0.3);
        }

        .filter-section {
            margin-bottom: 25px;
            padding-bottom: 20px;
            border-bottom: 1px solid rgba(255, 255, 255, 0.05);
        }

        .filter-section:last-child {
            border-bottom: none;
            margin-bottom: 0;
        }

        .filter-section.hidden {
            display: none;
        }

        .filter-title {
            font-size: 14px;
            font-weight: 600;
            color: #ffffff;
            margin-bottom: 12px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .filter-input,
        .filter-select {
            width: 100%;
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 8px;
            padding: 10px 12px;
            color: #ffffff;
            font-size: 13px;
            outline: none;
            transition: all 0.3s ease;
            margin-bottom: 10px;
        }

        .filter-input:focus,
        .filter-select:focus {
            border-color: rgba(255, 255, 255, 0.25);
            background: rgba(255, 255, 255, 0.08);
        }

        .filter-input::placeholder {
            color: rgba(255, 255, 255, 0.4);
        }

        .filter-select option {
            background: #1a1a1a;
            color: #ffffff;
        }

        .price-range {
            display: flex;
            gap: 8px;
        }

        .price-range .filter-input {
            margin-bottom: 0;
        }

        .brand-checkbox-group {
            display: flex;
            flex-direction: column;
            gap: 10px;
            max-height: 180px;
            overflow-y: auto;
        }

        .brand-checkbox {
            display: flex;
            align-items: center;
            gap: 10px;
            cursor: pointer;
            padding: 6px 8px;
            border-radius: 6px;
            transition: background 0.3s ease;
        }

        .brand-checkbox:hover {
            background: rgba(255, 255, 255, 0.05);
        }

        .brand-checkbox input[type="checkbox"] {
            width: 16px;
            height: 16px;
            accent-color: #ffffff;
            cursor: pointer;
        }

        .brand-checkbox label {
            font-size: 13px;
            color: rgba(255, 255, 255, 0.8);
            cursor: pointer;
            flex: 1;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .brand-checkbox .count {
            color: rgba(255, 255, 255, 0.5);
            font-size: 11px;
            font-weight: 500;
        }

        .active-filters-section {
            margin-bottom: 20px;
            padding: 15px;
            background: rgba(255, 255, 255, 0.03);
            border-radius: 8px;
            border: 1px solid rgba(255, 255, 255, 0.08);
        }

        .active-filters-title {
            font-size: 12px;
            color: rgba(255, 255, 255, 0.7);
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            margin-bottom: 10px;
        }

        .active-filter-tags {
            display: flex;
            flex-wrap: wrap;
            gap: 6px;
        }

        .active-filter-tag {
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.15);
            border-radius: 12px;
            padding: 4px 8px;
            font-size: 11px;
            color: #ffffff;
            display: flex;
            align-items: center;
            gap: 5px;
            transition: all 0.3s ease;
        }

        .active-filter-tag:hover {
            background: rgba(255, 255, 255, 0.15);
        }

        .active-filter-tag .remove {
            color: rgba(255, 255, 255, 0.6);
            cursor: pointer;
            font-size: 10px;
            width: 14px;
            height: 14px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            transition: all 0.3s ease;
        }

        .active-filter-tag .remove:hover {
            color: #ffffff;
            background: rgba(255, 255, 255, 0.2);
        }

        .apply-filters-btn {
            width: 100%;
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 8px;
            padding: 12px 20px;
            color: #ffffff;
            font-size: 13px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            margin-top: 20px;
        }

        .apply-filters-btn:hover {
            background: rgba(255, 255, 255, 0.15);
            border-color: rgba(255, 255, 255, 0.3);
        }

        /* ===== CONTENT AREA ===== */
        .content-area {
            flex: 1;
            padding: 25px 40px 40px;
            background: #0a0a0a;
        }

        .content-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
            padding-bottom: 15px;
            border-bottom: 1px solid rgba(255, 255, 255, 0.05);
        }

        .results-info {
            color: rgba(255, 255, 255, 0.7);
            font-size: 14px;
            font-weight: 500;
        }

        /* ===== PRODUCTS GRID ===== */
        .products-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 25px;
            margin-bottom: 40px;
        }

        .product-card {
            background: rgba(255, 255, 255, 0.03);
            border: 1px solid rgba(255, 255, 255, 0.06);
            border-radius: 16px;
            overflow: hidden;
            transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            cursor: pointer;
            position: relative;
        }

        .product-card:hover {
            background: rgba(255, 255, 255, 0.06);
            border-color: rgba(255, 255, 255, 0.12);
            transform: translateY(-8px) scale(1.02);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
        }

        .product-image-container {
            aspect-ratio: 1.1;
            background: rgba(255, 255, 255, 0.02);
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
            position: relative;
        }

        .product-image {
            width: 85%;
            height: 85%;
            object-fit: contain;
            transition: all 0.4s ease;
        }

        .product-card:hover .product-image {
            transform: scale(1.08) rotate(-2deg);
        }

        .product-badge {
            position: absolute;
            top: 12px;
            right: 12px;
            background: rgba(255, 107, 107, 0.9);
            color: #ffffff;
            padding: 6px 10px;
            border-radius: 12px;
            font-size: 11px;
            font-weight: 600;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.7; }
        }

        .product-info {
            padding: 20px;
        }

        .product-name {
            font-size: 15px;
            font-weight: 600;
            color: #ffffff;
            margin-bottom: 8px;
            line-height: 1.3;
            transition: color 0.3s ease;
        }

        .product-card:hover .product-name {
            color: #ffffff;
        }

        .product-brand {
            font-size: 12px;
            color: rgba(255, 255, 255, 0.6);
            margin-bottom: 12px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .product-price {
            display: flex;
            align-items: center;
            gap: 8px;
            margin-bottom: 15px;
        }

        .current-price {
            font-size: 16px;
            font-weight: 700;
            color: #ffffff;
        }

        .original-price {
            font-size: 13px;
            color: rgba(255, 255, 255, 0.4);
            text-decoration: line-through;
        }

        .product-actions {
            display: flex;
            gap: 8px;
            opacity: 0;
            transform: translateY(15px);
            transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        }

        .product-card:hover .product-actions {
            opacity: 1;
            transform: translateY(0);
        }

        .btn-primary {
            flex: 1;
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 8px;
            padding: 10px 16px;
            color: #ffffff;
            font-size: 12px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            text-align: center;
            text-decoration: none;
            position: relative;
            overflow: hidden;
        }

        .btn-primary::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s ease;
        }

        .btn-primary:hover::before {
            left: 100%;
        }

        .btn-primary:hover {
            background: rgba(255, 255, 255, 0.15);
            transform: translateY(-2px);
        }

        .btn-secondary {
            background: transparent;
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 8px;
            width: 36px;
            height: 36px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: rgba(255, 255, 255, 0.7);
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 14px;
        }

        .btn-secondary:hover {
            background: rgba(255, 255, 255, 0.1);
            color: #ffffff;
            transform: scale(1.1);
        }

        /* ===== PAGINATION ===== */
        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 8px;
            margin-top: 40px;
        }

        .pagination-btn {
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 8px;
            padding: 10px 15px;
            color: rgba(255, 255, 255, 0.7);
            text-decoration: none;
            font-size: 13px;
            font-weight: 500;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .pagination-btn:hover {
            background: rgba(255, 255, 255, 0.1);
            color: #ffffff;
            transform: translateY(-2px);
        }

        .pagination-current {
            background: rgba(255, 255, 255, 0.1);
            color: #ffffff;
            font-weight: 600;
        }

        /* ===== LOADING OVERLAY ===== */
        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(10, 10, 10, 0.9);
            backdrop-filter: blur(10px);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 9999;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
        }

        .loading-overlay.active {
            opacity: 1;
            visibility: visible;
        }

        .loading-spinner {
            width: 40px;
            height: 40px;
            border: 2px solid rgba(255, 255, 255, 0.2);
            border-top: 2px solid #ffffff;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        /* ===== EMPTY STATE ===== */
        .empty-state {
            grid-column: 1 / -1;
            text-align: center;
            padding: 60px 20px;
            color: rgba(255, 255, 255, 0.5);
        }

        .empty-state i {
            font-size: 48px;
            margin-bottom: 20px;
            opacity: 0.3;
        }

        .empty-state h3 {
            font-size: 20px;
            font-weight: 600;
            margin-bottom: 12px;
            color: rgba(255, 255, 255, 0.7);
        }

        /* ===== TOAST NOTIFICATIONS ===== */
        .toast {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 20px;
            border-radius: 8px;
            color: #ffffff;
            font-weight: 500;
            z-index: 10001;
            transform: translateX(100%);
            opacity: 0;
            transition: all 0.3s ease;
            max-width: 300px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
        }

        .toast.show {
            transform: translateX(0);
            opacity: 1;
        }

        .toast.success {
            background: linear-gradient(135deg, #28a745, #20c997);
        }

        .toast.error {
            background: linear-gradient(135deg, #dc3545, #e74c3c);
        }

        /* ===== FOOTER ===== */
        .footer {
            background: #0a0a0a;
            border-top: 1px solid rgba(255, 255, 255, 0.08);
            padding: 60px 60px 30px;
            margin-top: 80px;
        }

        .footer-container {
            max-width: 1400px;
            margin: 0 auto;
        }

        .footer-main {
            display: grid;
            grid-template-columns: 2fr 1fr 1fr 1fr 1fr;
            gap: 40px;
            margin-bottom: 40px;
        }

        .footer-brand {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        .footer-logo {
            display: flex;
            align-items: center;
            font-size: 24px;
            font-weight: 700;
            color: #ffffff;
            text-decoration: none;
        }

        .footer-logo::before {
            content: "â™ª";
            margin-right: 12px;
            font-size: 28px;
        }

        .footer-description {
            color: rgba(255, 255, 255, 0.7);
            font-size: 14px;
            line-height: 1.6;
            max-width: 280px;
        }

        .footer-social {
            display: flex;
            gap: 15px;
            margin-top: 10px;
        }

        .social-icon {
            width: 40px;
            height: 40px;
            background: rgba(255, 255, 255, 0.08);
            border: 1px solid rgba(255, 255, 255, 0.12);
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: rgba(255, 255, 255, 0.7);
            text-decoration: none;
            font-size: 16px;
            transition: all 0.3s ease;
        }

        .social-icon:hover {
            background: rgba(255, 255, 255, 0.15);
            color: #ffffff;
            transform: translateY(-2px);
        }

        .footer-column {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        .footer-title {
            font-size: 16px;
            font-weight: 600;
            color: #ffffff;
            margin-bottom: 5px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .footer-links {
            display: flex;
            flex-direction: column;
            gap: 12px;
        }

        .footer-link {
            color: rgba(255, 255, 255, 0.7);
            text-decoration: none;
            font-size: 14px;
            font-weight: 400;
            transition: color 0.3s ease;
            line-height: 1.5;
        }

        .footer-link:hover {
            color: #ffffff;
        }

        .footer-bottom {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding-top: 30px;
            border-top: 1px solid rgba(255, 255, 255, 0.08);
        }

        .footer-copyright {
            color: rgba(255, 255, 255, 0.5);
            font-size: 13px;
            font-weight: 400;
        }

        .footer-legal {
            display: flex;
            gap: 25px;
        }

        .footer-legal a {
            color: rgba(255, 255, 255, 0.5);
            text-decoration: none;
            font-size: 13px;
            transition: color 0.3s ease;
        }

        .footer-legal a:hover {
            color: rgba(255, 255, 255, 0.8);
        }

        /* ===== MOBILE SIDEBAR ===== */
        .mobile-filter-btn {
            display: none;
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 50%;
            width: 56px;
            height: 56px;
            color: #ffffff;
            font-size: 20px;
            cursor: pointer;
            z-index: 1001;
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
        }

        .mobile-filter-btn:hover {
            background: rgba(255, 255, 255, 0.15);
            transform: scale(1.1);
        }

        .sidebar-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.7);
            z-index: 1002;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
        }

        .sidebar-overlay.active {
            opacity: 1;
            visibility: visible;
        }

        /* ===== RESPONSIVE DESIGN ===== */
        @media (max-width: 1200px) {
            .main-layout {
                max-width: 100%;
                padding: 0 20px;
            }

            .sidebar-filters {
                width: 280px;
            }

            .content-area {
                padding: 25px 20px;
            }

            .footer {
                padding: 50px 40px 25px;
            }

            .footer-main {
                grid-template-columns: 1fr 1fr 1fr;
                gap: 30px;
            }
        }

        @media (max-width: 968px) {
            .navbar {
                flex-direction: column;
                gap: 20px;
                padding: 20px;
            }

            .hero-title,
            .hero-subtitle {
                font-size: 42px;
            }

            .hero-section {
                padding: 80px 20px 15px;
            }

            .main-layout {
                flex-direction: column;
                padding: 0;
            }

            .sidebar-filters {
                position: fixed;
                top: 0;
                left: -100%;
                width: 85%;
                max-width: 320px;
                height: 100vh;
                z-index: 1003;
                transition: left 0.3s ease;
                border-right: none;
                background: rgba(10, 10, 10, 0.98);
                backdrop-filter: blur(20px);
                overflow-y: auto;
                padding: 100px 20px 20px;
            }

            .sidebar-filters.active {
                left: 0;
            }

            .mobile-filter-btn {
                display: flex;
                align-items: center;
                justify-content: center;
            }

            .content-area {
                padding: 20px 15px;
            }

            .products-grid {
                grid-template-columns: 1fr;
                gap: 15px;
            }

            .content-header {
                flex-direction: column;
                gap: 15px;
                align-items: flex-start;
            }

            .footer {
                padding: 40px 20px 20px;
            }

            .footer-main {
                grid-template-columns: 1fr;
                gap: 30px;
                text-align: center;
            }

            .footer-bottom {
                flex-direction: column;
                gap: 15px;
                text-align: center;
            }

            .footer-legal {
                gap: 15px;
            }
        }

        @media (max-width: 480px) {
            .sidebar-filters {
                width: 100%;
                max-width: 100%;
            }

            .hero-title,
            .hero-subtitle {
                font-size: 32px;
            }

            .products-grid {
                grid-template-columns: 1fr;
                gap: 12px;
            }

            .footer-social {
                justify-content: center;
            }
        }
    </style>
</head>
<body>
    <!-- Loading Overlay -->
    <div class="loading-overlay" id="loadingOverlay">
        <div class="loading-spinner"></div>
    </div>

    <!-- Mobile Filter Button -->
    <button class="mobile-filter-btn" id="mobileFilterBtn">
        <i class="fas fa-filter"></i>
    </button>

    <!-- Sidebar Overlay -->
    <div class="sidebar-overlay" id="sidebarOverlay"></div>

    <!-- Navbar -->
    <nav class="navbar animate-on-load slide-down" style="animation-delay: 0.1s;">
        <div class="logo">Melodia</div>
        <ul class="nav-links">
            <li><a href="/">HOME</a></li>
            <li><a href="#contact">CONTACT</a></li>
            <li><a href="/user/product/list" class="active">SHOP</a></li>
        </ul>
        <div class="nav-actions">
            <div class="search-container">
                <i class="fas fa-search search-icon"></i>
                <input type="text" class="search-box" placeholder="Search products..." id="navSearch">
            </div>
            <div class="nav-icons">
                <i class="far fa-heart nav-icon"></i>
                <i class="fas fa-shopping-cart nav-icon"></i>
                <i class="far fa-user nav-icon"></i>
            </div>
        </div>
    </nav>

    <!-- Hero Section -->
    <section class="hero-section">
        <h1 class="hero-title gradient-text animate-on-load fade-in-up" style="animation-delay: 0.3s;">Choose</h1>
        <h2 class="hero-subtitle gradient-text-alt animate-on-load fade-in-up" style="animation-delay: 0.4s;">Your Style</h2>
    </section>

    <!-- Main Layout with Sidebar -->
    <div class="main-layout">
        <!-- Left Vertical Sidebar Filters -->
        <aside class="sidebar-filters animate-on-load fade-in-left" id="sidebarFilters" style="animation-delay: 0.5s;">
            <div class="sidebar-header">
                <h2 class="sidebar-title">
                    <i class="fas fa-filter"></i>
                    Filters
                </h2>
                <button class="clear-all-btn" id="clearAllBtn">Clear All</button>
            </div>

            <!-- Active Filters Section -->
            <div class="active-filters-section" id="activeFiltersSection" style="display: none;">
                <div class="active-filters-title">Active Filters</div>
                <div class="active-filter-tags" id="activeFilterTags"></div>
            </div>

            <!-- Search Filter -->
            <div class="filter-section">
                <div class="filter-title">Search</div>
                <input 
                    type="text" 
                    id="searchFilter" 
                    class="filter-input" 
                    placeholder="Search products..."
                    value="<%= typeof q !== 'undefined' ? q : '' %>"
                >
            </div>

            <!-- Category Filter -->
            <div class="filter-section">
                <div class="filter-title">Category</div>
                <select id="categoryFilter" class="filter-select">
                    <option value="">All Categories</option>
                    <% if (typeof categories !== 'undefined') { %>
                        <% categories.forEach(cat => { %>
                            <option value="<%= cat._id %>" <%= typeof category !== 'undefined' && category === cat._id.toString() ? 'selected' : '' %>>
                                <%= cat.name %>
                            </option>
                        <% }) %>
                    <% } %>
                </select>
            </div>

            <!-- Dynamic Brand Filter -->
           <!-- Dynamic Brand Filter -->
<div class="filter-section" id="brandFilterSection">
    <div class="filter-title">Brand</div>
    <div class="brand-checkbox-group" id="brandCheckboxGroup">
        <!-- This will be populated dynamically -->
        <% if (typeof allBrands !== 'undefined' && allBrands.length > 0) { %>
            <% allBrands.forEach(brand => { %>
                <div class="brand-checkbox">
                    <input type="checkbox" id="brand-<%= brand.replace(/\s+/g, '-').toLowerCase() %>" value="<%= brand %>" 
                           <%= (typeof brands !== 'undefined' && brands.includes(brand)) ? 'checked' : '' %>>
                    <label for="brand-<%= brand.replace(/\s+/g, '-').toLowerCase() %>">
                        <%= brand %>
                        <span class="count">(0)</span>
                    </label>
                </div>
            <% }) %>
        <% } %>
    </div>
</div>


            <!-- Price Range Filter -->
            <div class="filter-section">
                <div class="filter-title">Price Range</div>
                <div class="price-range">
                    <input 
                        type="number" 
                        id="priceMinFilter" 
                        class="filter-input" 
                        placeholder="Min â‚¹"
                        value="<%= typeof priceMin !== 'undefined' ? priceMin : '' %>"
                    >
                    <input 
                        type="number" 
                        id="priceMaxFilter" 
                        class="filter-input" 
                        placeholder="Max â‚¹"
                        value="<%= typeof priceMax !== 'undefined' ? priceMax : '' %>"
                    >
                </div>
            </div>

            <!-- Sort Filter -->
            <div class="filter-section">
                <div class="filter-title">Sort By</div>
                <select id="sortFilter" class="filter-select">
                    <option value="">Featured</option>
                    <option value="priceAsc" <%= typeof sort !== 'undefined' && sort === 'priceAsc' ? 'selected' : '' %>>Price: Low to High</option>
                    <option value="priceDesc" <%= typeof sort !== 'undefined' && sort === 'priceDesc' ? 'selected' : '' %>>Price: High to Low</option>
                    <option value="nameAsc" <%= typeof sort !== 'undefined' && sort === 'nameAsc' ? 'selected' : '' %>>Name: A to Z</option>
                    <option value="nameDesc" <%= typeof sort !== 'undefined' && sort === 'nameDesc' ? 'selected' : '' %>>Name: Z to A</option>
                    <option value="newest" <%= typeof sort !== 'undefined' && sort === 'newest' ? 'selected' : '' %>>Newest First</option>
                    <option value="popular" <%= typeof sort !== 'undefined' && sort === 'popular' ? 'selected' : '' %>>Most Popular</option>
                </select>
            </div>

            <button class="apply-filters-btn" id="applyFiltersBtn">
                Apply Filters
            </button>
        </aside>

        <!-- Main Content Area -->
        <main class="content-area animate-on-load fade-in-right" style="animation-delay: 0.6s;">
            <!-- Content Header -->
            <div class="content-header">
                <div class="results-info" id="resultsInfo">
                    <% if (typeof products !== 'undefined' && products.length > 0) { %>
                        Showing <%= products.length %> of <%= typeof totalProducts !== 'undefined' && totalProducts !== null ? totalProducts : products.length %> products
                    <% } else { %>
                        No products found
                    <% } %>
                </div>
            </div>

            <!-- Products Grid -->
            <div id="productsContainer" class="products-grid">
                <% if (!products || products.length === 0) { %>
                    <div class="empty-state animate-on-load fade-in-scale" style="animation-delay: 0.8s;">
                        <i class="fas fa-search"></i>
                        <h3>No products found</h3>
                        <p>Try adjusting your search criteria or browse all products</p>
                    </div>
                <% } else { %>
                    <% products.forEach((product, index) => { %>
                        <div class="product-card animate-on-load fade-in-scale" data-product-id="<%= product._id %>" style="animation-delay: <%= 0.8 + (index * 0.1) %>s;">
                            <div class="product-image-container">
                                <img 
                                    src="<%= getImageUrl ? getImageUrl(product.images && product.images.length > 0 ? product.images[0] : null) : (product.images && product.images.length > 0 ? product.images[0] : '/assets/placeholder.jpg') %>" 
                                    alt="<%= product.productName || 'Product Image' %>" 
                                    class="product-image"
                                    loading="lazy"
                                    onerror="this.src='/assets/placeholder.jpg'"
                                >
                                <% if (product.bestOffer > 0) { %>
                                    <div class="product-badge"><%= product.bestOffer %>% OFF</div>
                                <% } %>
                            </div>
                            <div class="product-info">
                                <h3 class="product-name"><%= product.productName || 'Unnamed Product' %></h3>
                                <p class="product-brand"><%= product.brand || 'Unknown Brand' %></p>
                                <div class="product-price">
                                    <% if (product.bestOffer > 0) { %>
                                        <span class="current-price">â‚¹<%= product.lowestSalePrice?.toFixed(2) || 'N/A' %></span>
                                        <span class="original-price">â‚¹<%= product.lowestPrice?.toFixed(2) || 'N/A' %></span>
                                    <% } else { %>
                                        <span class="current-price">â‚¹<%= product.lowestPrice?.toFixed(2) || 'N/A' %></span>
                                    <% } %>
                                </div>
                                <div class="product-actions">
                                    <button class="btn-primary" onclick="navigateToProduct('<%= product._id %>')">
                                        View Details
                                    </button>
                                    <button class="btn-secondary" onclick="addToWishlist('<%= product._id %>')">
                                        <i class="fas fa-heart"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    <% }) %>
                <% } %>
            </div>

            <!-- Pagination -->
            <% if (typeof totalPages !== 'undefined' && totalPages > 1) { %>
                <div class="pagination animate-on-load fade-in-up" id="paginationContainer" style="animation-delay: 1.2s;">
                    <% if (typeof currentPage !== 'undefined' && currentPage > 1) { %>
                        <span class="pagination-btn" onclick="changePage(<%= currentPage - 1 %>)">
                            <i class="fas fa-chevron-left"></i> Previous
                        </span>
                    <% } %>
                    
                    <% for (let i = Math.max(1, (currentPage || 1) - 2); i <= Math.min(totalPages, (currentPage || 1) + 2); i++) { %>
                        <% if (i === (currentPage || 1)) { %>
                            <span class="pagination-btn pagination-current"><%= i %></span>
                        <% } else { %>
                            <span class="pagination-btn" onclick="changePage(<%= i %>)"><%= i %></span>
                        <% } %>
                    <% } %>
                    
                    <% if (typeof currentPage !== 'undefined' && currentPage < totalPages) { %>
                        <span class="pagination-btn" onclick="changePage(<%= currentPage + 1 %>)">
                            Next <i class="fas fa-chevron-right"></i>
                        </span>
                    <% } %>
                </div>
            <% } %>
        </main>
    </div>

    <!-- Footer Section -->
    <footer class="footer animate-on-load fade-in-up" style="animation-delay: 1.4s;">
        <div class="footer-container">
            <div class="footer-main">
                <!-- Brand Section -->
                <div class="footer-brand">
                    <a href="/" class="footer-logo">Melodia</a>
                    <p class="footer-description">
                        Premium audio products designed for music lovers who demand exceptional sound quality and style.
                    </p>
                    <div class="footer-social">
                        <a href="#" class="social-icon" aria-label="Facebook">
                            <i class="fab fa-facebook-f"></i>
                        </a>
                        <a href="#" class="social-icon" aria-label="Twitter">
                            <i class="fab fa-twitter"></i>
                        </a>
                        <a href="#" class="social-icon" aria-label="Instagram">
                            <i class="fab fa-instagram"></i>
                        </a>
                        <a href="#" class="social-icon" aria-label="LinkedIn">
                            <i class="fab fa-linkedin-in"></i>
                        </a>
                        <a href="#" class="social-icon" aria-label="YouTube">
                            <i class="fab fa-youtube"></i>
                        </a>
                    </div>
                </div>

                <!-- Products Section -->
                <div class="footer-column">
                    <h3 class="footer-title">Products</h3>
                    <div class="footer-links">
                        <a href="#" class="footer-link">Headphones</a>
                        <a href="#" class="footer-link">Earphones</a>
                        <a href="#" class="footer-link">Wireless</a>
                        <a href="#" class="footer-link">Accessories</a>
                        <a href="#" class="footer-link">New Arrivals</a>
                    </div>
                </div>

                <!-- Support Section -->
                <div class="footer-column">
                    <h3 class="footer-title">Support</h3>
                    <div class="footer-links">
                        <a href="#" class="footer-link">Product Help</a>
                        <a href="#" class="footer-link">Register</a>
                        <a href="#" class="footer-link">Updates</a>
                        <a href="#" class="footer-link">Provides</a>
                        <a href="#" class="footer-link">Contact Us</a>
                    </div>
                </div>

                <!-- Account Section -->
                <div class="footer-column">
                    <h3 class="footer-title">Account</h3>
                    <div class="footer-links">
                        <a href="#" class="footer-link">My Account</a>
                        <a href="#" class="footer-link">Sign In / Register</a>
                        <a href="#" class="footer-link">Cart</a>
                        <a href="#" class="footer-link">Wishlist</a>
                        <a href="#" class="footer-link">About</a>
                    </div>
                </div>

                <!-- Follow Us Section -->
                <div class="footer-column">
                    <h3 class="footer-title">Follow Us</h3>
                    <div class="footer-links">
                        <a href="#" class="footer-link">
                            <i class="fab fa-facebook-f" style="margin-right: 8px;"></i>
                            Facebook
                        </a>
                        <a href="#" class="footer-link">
                            <i class="fab fa-instagram" style="margin-right: 8px;"></i>
                            Instagram
                        </a>
                        <a href="#" class="footer-link">
                            <i class="fab fa-twitter" style="margin-right: 8px;"></i>
                            Twitter
                        </a>
                        <a href="#" class="footer-link">
                            <i class="fab fa-youtube" style="margin-right: 8px;"></i>
                            YouTube
                        </a>
                    </div>
                </div>
            </div>

            <!-- Footer Bottom -->
            <div class="footer-bottom">
                <div class="footer-copyright">
                    Â© 2025 Melodia. All rights reserved.
                </div>
                <div class="footer-legal">
                    <a href="#">Privacy Policy</a>
                    <a href="#">Terms of Service</a>
                    <a href="#">Cookie Policy</a>
                </div>
            </div>
        </div>
    </footer>

    <!-- ENHANCED JAVASCRIPT WITH FIXED CLEAR BUTTON & DYNAMIC BRANDS -->
    <script>
        // Global variables
        let availableBrands = new Set();
        let selectedBrandFilters = new Set();
        let currentPage = 1;
        let currentFilters = {
            search: '',
            category: '',
            brands: [],
            priceMin: '',
            priceMax: '',
            sort: ''
        };

        // Initialize on DOM load
        document.addEventListener('DOMContentLoaded', function() {
            console.log('DOM loaded, initializing...');
            initializeApp();
        });

        function initializeApp() {
            try {
                initializePageAnimations();
                initializeAvailableBrands();
                loadCurrentFiltersFromURL();
                setupEventListeners();
                updateActiveFilters();
                updateClearButtonVisibility();
                console.log('App initialized successfully');
            } catch (error) {
                console.error('Initialization error:', error);
            }
        }

        function initializePageAnimations() {
            setTimeout(() => {
                document.querySelectorAll('.animate-on-load').forEach((element) => {
                    const animationClass = element.classList.contains('slide-down') ? 'slide-down' :
                                         element.classList.contains('fade-in-left') ? 'fade-in-left' :
                                         element.classList.contains('fade-in-right') ? 'fade-in-right' :
                                         element.classList.contains('fade-in-scale') ? 'fade-in-scale' :
                                         'fade-in-up';
                    element.classList.add(animationClass);
                });
            }, 100);
        }

        // Initialize available brands dynamically from current products
        function initializeAvailableBrands() {
    // Clear existing brands
    availableBrands.clear();
    
    // Add brands from server-side data (ALL AVAILABLE BRANDS)
    <% if (typeof allBrands !== 'undefined' && Array.isArray(allBrands)) { %>
        <% allBrands.forEach(brand => { %>
            <% if (brand) { %>
                availableBrands.add('<%= brand %>');
            <% } %>
        <% }) %>
    <% } %>
    
    // Also extract from current products (CURRENT PAGE BRANDS)
    <% if (typeof products !== 'undefined' && products.length > 0) { %>
        <% products.forEach(product => { %>
            <% if (product.brand) { %>
                availableBrands.add('<%= product.brand %>');
            <% } %>
        <% }) %>
    <% } %>
    
    console.log('Available brands:', Array.from(availableBrands));
    updateBrandFilter();
}


        // Load current filters from URL parameters
        function loadCurrentFiltersFromURL() {
            const urlParams = new URLSearchParams(window.location.search);
            
            // Load filters from URL
            currentFilters.search = urlParams.get('q') || '';
            currentFilters.category = urlParams.get('category') || '';
            currentFilters.priceMin = urlParams.get('priceMin') || '';
            currentFilters.priceMax = urlParams.get('priceMax') || '';
            currentFilters.sort = urlParams.get('sort') || '';
            
            // Handle brands parameter (comma-separated)
            const brandsParam = urlParams.get('brands');
            if (brandsParam) {
                currentFilters.brands = brandsParam.split(',').filter(b => b.trim());
                selectedBrandFilters = new Set(currentFilters.brands);
            }
            
            console.log('Loaded filters from URL:', currentFilters);
        }

        // Update brand filter dynamically
        function updateBrandFilter() {
            const brandContainer = document.getElementById('brandCheckboxGroup');
            const brandSection = document.getElementById('brandFilterSection');
            
            if (!brandContainer || !brandSection) {
                console.warn('Brand filter elements not found');
                return;
            }
            
            if (availableBrands.size === 0) {
                brandSection.classList.add('hidden');
                return;
            }
            
            brandSection.classList.remove('hidden');
            
            // Create brand checkboxes dynamically
            const brandArray = Array.from(availableBrands).sort();
            brandContainer.innerHTML = brandArray.map(brand => {
                const brandId = `brand-${brand.replace(/\s+/g, '-').toLowerCase()}`;
                const isChecked = selectedBrandFilters.has(brand) ? 'checked' : '';
                
                // Count products for this brand
                let productCount = 0;
                <% if (typeof products !== 'undefined' && products.length > 0) { %>
                    <% products.forEach(product => { %>
                        if ('<%= product.brand %>' === brand) {
                            productCount++;
                        }
                    <% }) %>
                <% } %>
                
                return `
                    <div class="brand-checkbox">
                        <input type="checkbox" id="${brandId}" value="${brand}" ${isChecked}>
                        <label for="${brandId}">
                            ${brand}
                            <span class="count" id="${brandId}-count">(${productCount})</span>
                        </label>
                    </div>
                `;
            }).join('');
            
            // Add event listeners to new checkboxes
            brandContainer.querySelectorAll('input[type="checkbox"]').forEach(checkbox => {
                checkbox.addEventListener('change', function() {
                    updateBrandFilters();
                    updateActiveFilters();
                    updateClearButtonVisibility();
                });
            });
            
            console.log('Brand filter updated with', brandArray.length, 'brands');
        }

        function setupEventListeners() {
            // Search functionality with debouncing
            const navSearch = document.getElementById('navSearch');
            const searchFilter = document.getElementById('searchFilter');
            let searchTimeout;

            if (navSearch && searchFilter) {
                // Set initial values
                navSearch.value = currentFilters.search;
                searchFilter.value = currentFilters.search;

                navSearch.addEventListener('input', function(e) {
                    clearTimeout(searchTimeout);
                    const query = e.target.value.trim();
                    searchFilter.value = query;
                    
                    searchTimeout = setTimeout(() => {
                        currentFilters.search = query;
                        currentPage = 1;
                        updateActiveFilters();
                        updateClearButtonVisibility();
                    }, 300);
                });

                searchFilter.addEventListener('input', function(e) {
                    clearTimeout(searchTimeout);
                    const query = e.target.value.trim();
                    navSearch.value = query;
                    
                    searchTimeout = setTimeout(() => {
                        currentFilters.search = query;
                        currentPage = 1;
                        updateActiveFilters();
                        updateClearButtonVisibility();
                    }, 300);
                });
            }

            // Filter change handlers
            const categoryFilter = document.getElementById('categoryFilter');
            if (categoryFilter) {
                categoryFilter.value = currentFilters.category;
                categoryFilter.addEventListener('change', (e) => {
                    currentFilters.category = e.target.value;
                    currentPage = 1;
                    updateActiveFilters();
                    updateClearButtonVisibility();
                });
            }

            const priceMinFilter = document.getElementById('priceMinFilter');
            const priceMaxFilter = document.getElementById('priceMaxFilter');
            
            if (priceMinFilter) {
                priceMinFilter.value = currentFilters.priceMin;
                priceMinFilter.addEventListener('input', debounce((e) => {
                    currentFilters.priceMin = e.target.value;
                    updateActiveFilters();
                    updateClearButtonVisibility();
                }, 500));
            }

            if (priceMaxFilter) {
                priceMaxFilter.value = currentFilters.priceMax;
                priceMaxFilter.addEventListener('input', debounce((e) => {
                    currentFilters.priceMax = e.target.value;
                    updateActiveFilters();
                    updateClearButtonVisibility();
                }, 500));
            }

            const sortFilter = document.getElementById('sortFilter');
            if (sortFilter) {
                sortFilter.value = currentFilters.sort;
                sortFilter.addEventListener('change', (e) => {
                    currentFilters.sort = e.target.value;
                    currentPage = 1;
                    updateActiveFilters();
                    updateClearButtonVisibility();
                });
            }

            // Apply filters button
            const applyBtn = document.getElementById('applyFiltersBtn');
            if (applyBtn) {
                applyBtn.addEventListener('click', () => {
                    currentPage = 1;
                    applyFilters();
                });
            }

            // Clear all button - FIXED
            const clearBtn = document.getElementById('clearAllBtn');
            if (clearBtn) {
                clearBtn.addEventListener('click', (e) => {
                    e.preventDefault();
                    clearAllFilters();
                });
            }

            // Mobile sidebar
            const mobileBtn = document.getElementById('mobileFilterBtn');
            const sidebar = document.getElementById('sidebarFilters');
            const overlay = document.getElementById('sidebarOverlay');

            if (mobileBtn && sidebar && overlay) {
                mobileBtn.addEventListener('click', () => {
                    sidebar.classList.add('active');
                    overlay.classList.add('active');
                    document.body.style.overflow = 'hidden';
                });

                overlay.addEventListener('click', () => {
                    sidebar.classList.remove('active');
                    overlay.classList.remove('active');
                    document.body.style.overflow = '';
                });
            }
        }

        function updateBrandFilters() {
            const selectedBrands = Array.from(document.querySelectorAll('input[type="checkbox"]:checked'))
                .map(cb => cb.value);
            
            currentFilters.brands = selectedBrands;
            selectedBrandFilters = new Set(selectedBrands);
            
            console.log('Updated brand filters:', selectedBrands);
        }

        // Apply filters using form submission
        function applyFilters() {
            try {
                showLoading();
                
                const params = new URLSearchParams();
                if (currentFilters.search) params.set('q', currentFilters.search);
                if (currentFilters.category) params.set('category', currentFilters.category);
                if (currentFilters.brands.length > 0) params.set('brands', currentFilters.brands.join(','));
                if (currentFilters.priceMin) params.set('priceMin', currentFilters.priceMin);
                if (currentFilters.priceMax) params.set('priceMax', currentFilters.priceMax);
                if (currentFilters.sort) params.set('sort', currentFilters.sort);
                params.set('page', currentPage);
                
                console.log('Applying filters with params:', Object.fromEntries(params));
                
                // Navigate to the filtered URL
                window.location.href = `/user/product/list?${params.toString()}`;
                
            } catch (error) {
                console.error('Error applying filters:', error);
                showToast('error', 'Error loading products. Please try again.');
                hideLoading();
            }
        }

        // Update active filters display
        function updateActiveFilters() {
            const activeFiltersContainer = document.getElementById('activeFilterTags');
            const activeFiltersSection = document.getElementById('activeFiltersSection');
            
            if (!activeFiltersContainer || !activeFiltersSection) return;
            
            const activeFilters = [];

            if (currentFilters.search) {
                activeFilters.push({key: 'search', label: `"${currentFilters.search}"`});
            }
            
            if (currentFilters.category) {
                const categorySelect = document.getElementById('categoryFilter');
                const categoryText = categorySelect?.selectedOptions[0] ? categorySelect.selectedOptions[0].text : 'Category';
                activeFilters.push({key: 'category', label: categoryText});
            }
            
            currentFilters.brands.forEach(brand => {
                activeFilters.push({key: `brand-${brand}`, label: brand});
            });
            
            if (currentFilters.priceMin) {
                activeFilters.push({key: 'priceMin', label: `Min: â‚¹${currentFilters.priceMin}`});
            }
            
            if (currentFilters.priceMax) {
                activeFilters.push({key: 'priceMax', label: `Max: â‚¹${currentFilters.priceMax}`});
            }
            
            if (currentFilters.sort) {
                const sortSelect = document.getElementById('sortFilter');
                const sortText = sortSelect?.selectedOptions[0] ? sortSelect.selectedOptions[0].text : 'Sort';
                activeFilters.push({key: 'sort', label: sortText});
            }

            if (activeFilters.length > 0) {
                activeFiltersSection.style.display = 'block';
                activeFiltersContainer.innerHTML = activeFilters.map(filter => `
                    <div class="active-filter-tag">
                        ${filter.label}
                        <span class="remove" onclick="removeFilter('${filter.key}')">
                            <i class="fas fa-times"></i>
                        </span>
                    </div>
                `).join('');
            } else {
                activeFiltersSection.style.display = 'none';
            }
        }

        // Remove individual filter
        function removeFilter(filterKey) {
            console.log('Removing filter:', filterKey);
            
            if (filterKey === 'search') {
                currentFilters.search = '';
                const searchFilter = document.getElementById('searchFilter');
                const navSearch = document.getElementById('navSearch');
                if (searchFilter) searchFilter.value = '';
                if (navSearch) navSearch.value = '';
            } else if (filterKey === 'category') {
                currentFilters.category = '';
                const categoryFilter = document.getElementById('categoryFilter');
                if (categoryFilter) categoryFilter.value = '';
            } else if (filterKey.startsWith('brand-')) {
                const brandValue = filterKey.replace('brand-', '');
                currentFilters.brands = currentFilters.brands.filter(b => b !== brandValue);
                selectedBrandFilters.delete(brandValue);
                const checkbox = document.querySelector(`input[value="${brandValue}"]`);
                if (checkbox) checkbox.checked = false;
            } else if (filterKey === 'priceMin') {
                currentFilters.priceMin = '';
                const priceMinFilter = document.getElementById('priceMinFilter');
                if (priceMinFilter) priceMinFilter.value = '';
            } else if (filterKey === 'priceMax') {
                currentFilters.priceMax = '';
                const priceMaxFilter = document.getElementById('priceMaxFilter');
                if (priceMaxFilter) priceMaxFilter.value = '';
            } else if (filterKey === 'sort') {
                currentFilters.sort = '';
                const sortFilter = document.getElementById('sortFilter');
                if (sortFilter) sortFilter.value = '';
            }
            
            currentPage = 1;
            updateActiveFilters();
            updateClearButtonVisibility();
            applyFilters();
        }

        // Update clear button visibility - FIXED
        function updateClearButtonVisibility() {
            const hasFilters = currentFilters.search || 
                             currentFilters.category || 
                             currentFilters.brands.length > 0 || 
                             currentFilters.priceMin || 
                             currentFilters.priceMax || 
                             currentFilters.sort;
            
            const clearBtn = document.getElementById('clearAllBtn');
            if (clearBtn) {
                if (hasFilters) {
                    clearBtn.classList.add('show');
                } else {
                    clearBtn.classList.remove('show');
                }
            }
            
            console.log('Clear button visibility updated:', hasFilters);
        }

        // Clear all filters - FIXED
        function clearAllFilters() {
            console.log('Clearing all filters...');
            
            // Reset all filter states
            currentFilters = {
                search: '',
                category: '',
                brands: [],
                priceMin: '',
                priceMax: '',
                sort: ''
            };
            
            selectedBrandFilters.clear();
            
            // Reset all form elements
            const searchFilter = document.getElementById('searchFilter');
            const navSearch = document.getElementById('navSearch');
            const categoryFilter = document.getElementById('categoryFilter');
            const priceMinFilter = document.getElementById('priceMinFilter');
            const priceMaxFilter = document.getElementById('priceMaxFilter');
            const sortFilter = document.getElementById('sortFilter');
            
            if (searchFilter) searchFilter.value = '';
            if (navSearch) navSearch.value = '';
            if (categoryFilter) categoryFilter.value = '';
            if (priceMinFilter) priceMinFilter.value = '';
            if (priceMaxFilter) priceMaxFilter.value = '';
            if (sortFilter) sortFilter.value = '';
            
            // Uncheck all brand checkboxes
            document.querySelectorAll('input[type="checkbox"]').forEach(cb => cb.checked = false);
            
            currentPage = 1;
            updateActiveFilters();
            updateClearButtonVisibility();
            
            // Navigate to clean URL
            showToast('success', 'All filters cleared!');
            setTimeout(() => {
                window.location.href = '/user/product/list';
            }, 500);
        }

        // Page navigation
        function changePage(page) {
            currentPage = page;
            applyFilters();
        }

        function navigateToProduct(productId) {
            if (!productId) {
                console.error('Product ID is required for navigation');
                return;
            }
            window.location.href = `/user/products/${productId}`;
        }

        function addToWishlist(productId) {
            console.log('Adding to wishlist:', productId);
            
            try {
                const heartBtn = event?.target?.closest('.btn-secondary');
                if (heartBtn) {
                    heartBtn.style.transform = 'scale(1.4) rotate(10deg)';
                    heartBtn.style.color = '#ff6b6b';
                    setTimeout(() => {
                        heartBtn.style.transform = 'scale(1.1)';
                    }, 200);
                }
                
                showToast('success', 'Product added to wishlist!');
            } catch (error) {
                console.error('Error in wishlist animation:', error);
            }
        }

        function showLoading() {
            const overlay = document.getElementById('loadingOverlay');
            if (overlay) overlay.classList.add('active');
        }

        function hideLoading() {
            const overlay = document.getElementById('loadingOverlay');
            if (overlay) overlay.classList.remove('active');
        }

        function showToast(type, message) {
            const toast = document.createElement('div');
            toast.className = `toast ${type}`;
            toast.innerHTML = `
                <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'}" style="margin-right: 8px;"></i>
                ${message}
            `;

            document.body.appendChild(toast);

            setTimeout(() => {
                toast.classList.add('show');
            }, 100);
            
            setTimeout(() => {
                toast.classList.remove('show');
                setTimeout(() => toast.remove(), 300);
            }, 3000);
        }

        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }
        

        // Make functions globally available
        window.navigateToProduct = navigateToProduct;
        window.addToWishlist = addToWishlist;
        window.removeFilter = removeFilter;
        window.changePage = changePage;
    </script>
</body>
</html>
