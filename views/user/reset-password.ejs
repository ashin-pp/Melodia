<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Helvetica Neue', Helvetica, sans-serif;
            background: #3a3a3a;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .page-title {
            position: absolute;
            top: 25px;
            left: 40px;
            color: #888;
            font-size: 16px;
            font-weight: 400;
            opacity: 0;
            animation: fadeIn 0.8s ease-out 0.2s forwards;
        }

        .reset-container {
            background: #ffffff;
            border-radius: 16px;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.3);
            padding: 40px 35px;
            width: 100%;
            max-width: 400px;
            text-align: center;
            opacity: 0;
            transform: translateY(20px);
            animation: slideInUp 0.6s ease-out 0.3s forwards;
        }

        @keyframes slideInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
            }
            to {
                opacity: 1;
            }
        }

        .logo {
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 22px;
            font-weight: 600;
            color: #333;
            margin-bottom: 35px;
            opacity: 0;
            animation: fadeIn 0.6s ease-out 0.6s forwards;
        }

        .logo::before {
            content: "‚ô™";
            margin-right: 8px;
            font-size: 24px;
            color: #333;
        }

        .reset-content {
            opacity: 0;
            animation: fadeIn 0.6s ease-out 0.8s forwards;
        }

        .reset-title {
            font-size: 18px;
            font-weight: 600;
            color: #333;
            margin-bottom: 8px;
            line-height: 1.4;
        }

        .reset-subtitle {
            font-size: 14px;
            color: #666;
            margin-bottom: 30px;
            line-height: 1.5;
        }

        .reset-form {
            width: 100%;
        }

        .form-group {
            width: 100%;
            margin-bottom: 20px;
            text-align: left;
        }

        .form-label {
            display: block;
            font-size: 14px;
            font-weight: 500;
            color: #333;
            margin-bottom: 8px;
        }

        .form-input {
            width: 100%;
            padding: 14px 16px;
            border: 1.5px solid #ddd;
            border-radius: 8px;
            font-size: 14px;
            background: #ffffff;
            transition: all 0.3s ease;
            outline: none;
            color: #333;
        }

        .form-input:focus {
            border-color: #666;
            box-shadow: 0 0 0 3px rgba(102, 102, 102, 0.1);
            transform: translateY(-1px);
        }

        .form-input::placeholder {
            color: #999;
            font-size: 14px;
        }

        .password-container {
            position: relative;
        }

        .password-toggle {
            position: absolute;
            right: 12px;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            cursor: pointer;
            color: #666;
            font-size: 14px;
            transition: all 0.3s ease;
            padding: 4px;
            border-radius: 4px;
        }

        .password-toggle:hover {
            color: #333;
            background: rgba(0, 0, 0, 0.05);
        }

        .reset-button {
            width: 100%;
            padding: 14px;
            background: #000000;
            color: #ffffff;
            border: none;
            border-radius: 8px;
            font-size: 15px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-top: 10px;
        }

        .reset-button:hover {
            background: #1a1a1a;
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
        }

        .reset-button:active {
            transform: translateY(0);
        }

        .reset-button:disabled {
            background: #ccc;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        /* Loading spinner */
        .loading-spinner {
            display: inline-block;
            width: 16px;
            height: 16px;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-top: 2px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Form validation states */
        .form-input.error {
            border-color: #e53e3e;
            box-shadow: 0 0 0 3px rgba(229, 62, 62, 0.1);
        }

        .form-input.success {
            border-color: #38a169;
            box-shadow: 0 0 0 3px rgba(56, 161, 105, 0.1);
        }

        .shake {
            animation: shake 0.5s ease-in-out;
        }

        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            75% { transform: translateX(5px); }
        }

        .password-strength {
            font-size: 12px;
            margin-top: 5px;
            color: #666;
        }

        .strength-weak { color: #e53e3e; }
        .strength-medium { color: #f6ad55; }
        .strength-strong { color: #38a169; }

        /* Responsive Design */
        @media (max-width: 480px) {
            .reset-container {
                padding: 30px 25px;
                max-width: 350px;
            }
        }
    </style>
</head>
<body>
    <div class="page-title">Reset password</div>
    
    <div class="reset-container">
        <div class="logo">Melodia</div>
        
        <div class="reset-content">
            <div class="reset-title">Set a new Password</div>
            <div class="reset-subtitle">Create a new password. Ensure it differs from previous ones for security</div>
            
            <form id="resetForm" action="/reset-password" method="POST" class="reset-form">
                <div class="form-group">
                    <label for="password" class="form-label">Password</label>
                    <div class="password-container">
                        <input 
                            type="password" 
                            id="password" 
                            name="password" 
                            class="form-input" 
                            placeholder="Enter your Password"
                            required
                            minlength="6"
                        >
                        <button type="button" class="password-toggle" onclick="togglePassword('password')">üëÅ</button>
                    </div>
                    <div id="passwordStrength" class="password-strength"></div>
                </div>

                <div class="form-group">
                    <label for="confirmPassword" class="form-label">Confirm Password</label>
                    <div class="password-container">
                        <input 
                            type="password" 
                            id="confirmPassword" 
                            name="confirmPassword" 
                            class="form-input" 
                            placeholder="Re-enter Password"
                            required
                            minlength="6"
                        >
                        <button type="button" class="password-toggle" onclick="togglePassword('confirmPassword')">üëÅ</button>
                    </div>
                </div>
                
                <button type="submit" class="reset-button">Reset Password</button>
            </form>
        </div>
    </div>

    <script>
        function togglePassword(inputId) {
            const passwordInput = document.getElementById(inputId);
            const toggleBtn = passwordInput.nextElementSibling;
            
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                toggleBtn.textContent = 'üôà';
            } else {
                passwordInput.type = 'password';
                toggleBtn.textContent = 'üëÅ';
            }
        }

        // Password strength checker
        function checkPasswordStrength(password) {
            const strengthIndicator = document.getElementById('passwordStrength');
            let strength = 0;
            let feedback = '';

            if (password.length >= 6) strength++;
            if (password.match(/[a-z]/)) strength++;
            if (password.match(/[A-Z]/)) strength++;
            if (password.match(/[0-9]/)) strength++;
            if (password.match(/[^a-zA-Z0-9]/)) strength++;

            switch (strength) {
                case 0:
                case 1:
                    feedback = 'Weak password';
                    strengthIndicator.className = 'password-strength strength-weak';
                    break;
                case 2:
                case 3:
                    feedback = 'Medium password';
                    strengthIndicator.className = 'password-strength strength-medium';
                    break;
                case 4:
                case 5:
                    feedback = 'Strong password';
                    strengthIndicator.className = 'password-strength strength-strong';
                    break;
            }

            strengthIndicator.textContent = password.length > 0 ? feedback : '';
        }

        // Password input event listener
        document.getElementById('password').addEventListener('input', function() {
            checkPasswordStrength(this.value);
            validatePasswordMatch();
        });

        document.getElementById('confirmPassword').addEventListener('input', function() {
            validatePasswordMatch();
        });

        function validatePasswordMatch() {
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            const confirmInput = document.getElementById('confirmPassword');

            if (confirmPassword.length > 0) {
                if (password === confirmPassword) {
                    confirmInput.classList.remove('error');
                    confirmInput.classList.add('success');
                } else {
                    confirmInput.classList.remove('success');
                    confirmInput.classList.add('error');
                }
            } else {
                confirmInput.classList.remove('error', 'success');
            }
        }

        // Form submission
        document.getElementById('resetForm').addEventListener('submit', function(e) {
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            
            // Clear previous states
            document.querySelectorAll('.form-input').forEach(input => {
                input.classList.remove('error', 'success', 'shake');
            });
            
            let hasErrors = false;
            
            // Password validation
            if (!password) {
                const input = document.getElementById('password');
                input.classList.add('error', 'shake');
                hasErrors = true;
            } else if (password.length < 6) {
                const input = document.getElementById('password');
                input.classList.add('error', 'shake');
                hasErrors = true;
            } else {
                document.getElementById('password').classList.add('success');
            }
            
            // Confirm password validation
            if (!confirmPassword) {
                const input = document.getElementById('confirmPassword');
                input.classList.add('error', 'shake');
                hasErrors = true;
            } else if (password !== confirmPassword) {
                const input = document.getElementById('confirmPassword');
                input.classList.add('error', 'shake');
                hasErrors = true;
            } else {
                document.getElementById('confirmPassword').classList.add('success');
            }
            
            if (hasErrors) {
                e.preventDefault();
                return;
            }

            // Show loading state
            const resetBtn = this.querySelector('.reset-button');
            const originalText = resetBtn.innerHTML;
            resetBtn.innerHTML = '<div class="loading-spinner"></div> Resetting...';
            resetBtn.disabled = true;
        });

        // Remove shake class after animation
        document.addEventListener('animationend', function(e) {
            if (e.animationName === 'shake') {
                e.target.classList.remove('shake');
            }
        });

    </script>

    <!-- Flash message handling -->
    <% if (typeof error !== 'undefined') { %>
        <script>
            alert('<%= error %>');
        </script>
    <% } %>
    
    <% if (typeof success !== 'undefined') { %>
        <script>
            alert('<%= success %>');
        </script>
    <% } %>
</body>
</html>
